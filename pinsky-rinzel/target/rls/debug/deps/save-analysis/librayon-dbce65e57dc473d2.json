{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0","program":"C:\\Rust\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","rayon","C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=dbce65e57dc473d2","-C","extra-filename=-dbce65e57dc473d2","--out-dir","c:\\Rust\\codes\\CA3-Rust\\pinsky-rinzel\\target\\rls\\debug\\deps","-L","dependency=c:\\Rust\\codes\\CA3-Rust\\pinsky-rinzel\\target\\rls\\debug\\deps","--extern","either=c:\\Rust\\codes\\CA3-Rust\\pinsky-rinzel\\target\\rls\\debug\\deps\\libeither-d9ff914448e64dfe.rmeta","--extern","rayon_core=c:\\Rust\\codes\\CA3-Rust\\pinsky-rinzel\\target\\rls\\debug\\deps\\librayon_core-9cb3e9e335ae3d67.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Rust/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Rust\\codes\\CA3-Rust\\pinsky-rinzel\\target\\rls\\debug\\deps\\librayon-dbce65e57dc473d2.rmeta"},"prelude":{"crate_id":{"name":"rayon","disambiguator":[6358851625774671966,185163965760717495]},"crate_root":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src","external_crates":[{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12578048494495979596,2047601184299498072]}},{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[9458200224090790355,13573932773036415113]}},{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17212932621614837670,6562776948220383497]}},{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[760535750034822653,11118367618612043106]}},{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9863315158332858256,17125058067034963864]}},{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[4687805557387852666,9943473115938981341]}},{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11895006708321731812,14562333644307237348]}},{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3795917533932740915,1352930594861700352]}},{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[14246119625412523820,1488400038702589601]}},{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[301469929213911528,4015090225475952437]}},{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[2057170103176572375,2047842178592089941]}},{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5373388065014169986,7291481803049279744]}},{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[11217907578908536000,17992819105755382748]}},{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","num":14,"id":{"name":"rayon_core","disambiguator":[9321855693005787366,449438894299457960]}},{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","num":15,"id":{"name":"crossbeam_queue","disambiguator":[18054267397868652380,8491583423650723266]}},{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","num":16,"id":{"name":"cfg_if","disambiguator":[11332822018376109482,12531163141307769881]}},{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","num":17,"id":{"name":"crossbeam_utils","disambiguator":[1517646912882825736,10666769287790703639]}},{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","num":18,"id":{"name":"lazy_static","disambiguator":[11183393041770989563,4958224602867445297]}},{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","num":19,"id":{"name":"crossbeam_deque","disambiguator":[4617849212838403884,18373534353808111297]}},{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","num":20,"id":{"name":"crossbeam_epoch","disambiguator":[15406688639951475100,4715233121051344971]}},{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","num":21,"id":{"name":"maybe_uninit","disambiguator":[10068608375343807728,3701175525633181931]}},{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","num":22,"id":{"name":"memoffset","disambiguator":[8849423394522930013,6307889775927670127]}},{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","num":23,"id":{"name":"scopeguard","disambiguator":[7850443876376515467,2425358950886397695]}},{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","num":24,"id":{"name":"num_cpus","disambiguator":[15361497890355566589,15307442574836681573]}},{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","num":25,"id":{"name":"either","disambiguator":[16564644435072377693,17139784906833043199]}}],"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","byte_start":0,"byte_end":4513,"line_start":1,"line_end":133,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":25,"index":170},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":22797,"byte_end":22803,"line_start":12,"line_end":12,"column_start":17,"column_end":23},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4112},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":23567,"byte_end":23572,"line_start":32,"line_end":32,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4125},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":23627,"byte_end":23636,"line_start":35,"line_end":35,"column_start":26,"column_end":35},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4134},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":23672,"byte_end":23678,"line_start":37,"line_end":37,"column_start":23,"column_end":29},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4143},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":23722,"byte_end":23731,"line_start":39,"line_end":39,"column_start":27,"column_end":36},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4152},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":23771,"byte_end":23778,"line_start":41,"line_end":41,"column_start":25,"column_end":32},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4161},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":23816,"byte_end":23823,"line_start":43,"line_end":43,"column_start":24,"column_end":31},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4181},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":23907,"byte_end":23911,"line_start":48,"line_end":48,"column_start":22,"column_end":26},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4193},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":23913,"byte_end":23921,"line_start":48,"line_end":48,"column_start":28,"column_end":36},"alias_span":null,"name":"FoldWith","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4205},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":23966,"byte_end":23970,"line_start":51,"line_end":51,"column_start":21,"column_end":25},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":1131},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":24011,"byte_end":24016,"line_start":53,"line_end":53,"column_start":26,"column_end":31},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4215},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":24018,"byte_end":24023,"line_start":53,"line_end":53,"column_start":33,"column_end":38},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4224},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":24056,"byte_end":24060,"line_start":55,"line_end":55,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4234},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":24090,"byte_end":24093,"line_start":57,"line_end":57,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4243},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":24133,"byte_end":24140,"line_start":59,"line_end":59,"column_start":25,"column_end":32},"alias_span":null,"name":"MapWith","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4255},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":24170,"byte_end":24173,"line_start":61,"line_end":61,"column_start":20,"column_end":23},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4268},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":24209,"byte_end":24214,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"alias_span":null,"name":"ZipEq","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4280},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":24258,"byte_end":24268,"line_start":65,"line_end":65,"column_start":27,"column_end":37},"alias_span":null,"name":"Interleave","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4293},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":24330,"byte_end":24348,"line_start":67,"line_end":67,"column_start":36,"column_end":54},"alias_span":null,"name":"InterleaveShortest","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4305},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":24394,"byte_end":24405,"line_start":69,"line_end":69,"column_start":28,"column_end":39},"alias_span":null,"name":"Intersperse","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4315},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":24446,"byte_end":24449,"line_start":73,"line_end":73,"column_start":20,"column_end":23},"alias_span":null,"name":"Rev","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4324},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":24480,"byte_end":24486,"line_start":75,"line_end":75,"column_start":21,"column_end":27},"alias_span":null,"name":"MinLen","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4334},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":24488,"byte_end":24494,"line_start":75,"line_end":75,"column_start":29,"column_end":35},"alias_span":null,"name":"MaxLen","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4344},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":24553,"byte_end":24559,"line_start":79,"line_end":79,"column_start":23,"column_end":29},"alias_span":null,"name":"Cloned","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4353},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":24597,"byte_end":24604,"line_start":81,"line_end":81,"column_start":24,"column_end":31},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4362},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":24648,"byte_end":24657,"line_start":83,"line_end":83,"column_start":27,"column_end":36},"alias_span":null,"name":"WhileSome","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4371},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":24717,"byte_end":24723,"line_start":87,"line_end":87,"column_start":24,"column_end":30},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":2553},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":24725,"byte_end":24731,"line_start":87,"line_end":87,"column_start":32,"column_end":38},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4380},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":24757,"byte_end":24764,"line_start":88,"line_end":88,"column_start":24,"column_end":31},"alias_span":null,"name":"RepeatN","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":2574},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":24766,"byte_end":24773,"line_start":88,"line_end":88,"column_start":33,"column_end":40},"alias_span":null,"name":"repeatn","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":2628},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":24810,"byte_end":24815,"line_start":91,"line_end":91,"column_start":23,"column_end":28},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":2626},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":24817,"byte_end":24822,"line_start":91,"line_end":91,"column_start":30,"column_end":35},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4390},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":24856,"byte_end":24860,"line_start":93,"line_end":93,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":2666},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":24862,"byte_end":24866,"line_start":93,"line_end":93,"column_start":28,"column_end":32},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":2884},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\prelude.rs","byte_start":252227,"byte_end":252247,"line_start":5,"line_end":5,"column_start":15,"column_end":35},"alias_span":null,"name":"FromParallelIterator","value":"","parent":{"krate":0,"index":2949}},{"kind":"Use","ref_id":{"krate":0,"index":2684},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\prelude.rs","byte_start":252263,"byte_end":252283,"line_start":6,"line_end":6,"column_start":15,"column_end":35},"alias_span":null,"name":"IntoParallelIterator","value":"","parent":{"krate":0,"index":2949}},{"kind":"Use","ref_id":{"krate":0,"index":2688},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\prelude.rs","byte_start":252299,"byte_end":252322,"line_start":7,"line_end":7,"column_start":15,"column_end":38},"alias_span":null,"name":"IntoParallelRefIterator","value":"","parent":{"krate":0,"index":2949}},{"kind":"Use","ref_id":{"krate":0,"index":2699},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\prelude.rs","byte_start":252338,"byte_end":252364,"line_start":8,"line_end":8,"column_start":15,"column_end":41},"alias_span":null,"name":"IntoParallelRefMutIterator","value":"","parent":{"krate":0,"index":2949}},{"kind":"Use","ref_id":{"krate":0,"index":2825},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\prelude.rs","byte_start":252380,"byte_end":252403,"line_start":9,"line_end":9,"column_start":15,"column_end":38},"alias_span":null,"name":"IndexedParallelIterator","value":"","parent":{"krate":0,"index":2949}},{"kind":"Use","ref_id":{"krate":0,"index":2888},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\prelude.rs","byte_start":252419,"byte_end":252433,"line_start":10,"line_end":10,"column_start":15,"column_end":29},"alias_span":null,"name":"ParallelExtend","value":"","parent":{"krate":0,"index":2949}},{"kind":"Use","ref_id":{"krate":0,"index":2710},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\prelude.rs","byte_start":252449,"byte_end":252465,"line_start":11,"line_end":11,"column_start":15,"column_end":31},"alias_span":null,"name":"ParallelIterator","value":"","parent":{"krate":0,"index":2949}},{"kind":"Use","ref_id":{"krate":0,"index":3191},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\prelude.rs","byte_start":252482,"byte_end":252495,"line_start":12,"line_end":12,"column_start":16,"column_end":29},"alias_span":null,"name":"ParallelSlice","value":"","parent":{"krate":0,"index":2949}},{"kind":"Use","ref_id":{"krate":0,"index":3201},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\prelude.rs","byte_start":252512,"byte_end":252528,"line_start":13,"line_end":13,"column_start":16,"column_end":32},"alias_span":null,"name":"ParallelSliceMut","value":"","parent":{"krate":0,"index":2949}},{"kind":"Use","ref_id":{"krate":0,"index":3468},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\prelude.rs","byte_start":252543,"byte_end":252557,"line_start":14,"line_end":14,"column_start":14,"column_end":28},"alias_span":null,"name":"ParallelString","value":"","parent":{"krate":0,"index":2949}},{"kind":"Use","ref_id":{"krate":14,"index":615},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","byte_start":4258,"byte_end":4277,"line_start":126,"line_end":126,"column_start":21,"column_end":40},"alias_span":null,"name":"current_num_threads","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":626},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","byte_start":4299,"byte_end":4312,"line_start":127,"line_end":127,"column_start":21,"column_end":34},"alias_span":null,"name":"Configuration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":693},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","byte_start":4334,"byte_end":4344,"line_start":128,"line_end":128,"column_start":21,"column_end":31},"alias_span":null,"name":"initialize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":527},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","byte_start":4366,"byte_end":4376,"line_start":129,"line_end":129,"column_start":21,"column_end":31},"alias_span":null,"name":"ThreadPool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":109},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","byte_start":4399,"byte_end":4403,"line_start":130,"line_end":130,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":119},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","byte_start":4405,"byte_end":4417,"line_start":130,"line_end":130,"column_start":28,"column_end":40},"alias_span":null,"name":"join_context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":851},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","byte_start":4440,"byte_end":4449,"line_start":131,"line_end":131,"column_start":21,"column_end":30},"alias_span":null,"name":"FnContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":409},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","byte_start":4472,"byte_end":4477,"line_start":132,"line_end":132,"column_start":22,"column_end":27},"alias_span":null,"name":"scope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":395},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","byte_start":4479,"byte_end":4484,"line_start":132,"line_end":132,"column_start":29,"column_end":34},"alias_span":null,"name":"Scope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":496},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","byte_start":4507,"byte_end":4512,"line_start":133,"line_end":133,"column_start":21,"column_end":26},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","byte_start":0,"byte_end":4513,"line_start":1,"line_end":133,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":22},{"krate":0,"index":59},{"krate":0,"index":150},{"krate":0,"index":2892},{"krate":0,"index":2949},{"krate":0,"index":2960},{"krate":0,"index":2979},{"krate":0,"index":3016},{"krate":0,"index":3460},{"krate":0,"index":3580},{"krate":0,"index":3641},{"krate":0,"index":3668},{"krate":0,"index":3669},{"krate":0,"index":3670},{"krate":0,"index":3671},{"krate":0,"index":3672},{"krate":0,"index":3675},{"krate":0,"index":3676},{"krate":0,"index":3679}],"decl_id":null,"docs":" Data-parallelism library that is easy to convert sequential computations into parallel.","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","byte_start":53,"byte_end":84,"line_start":2,"line_end":2,"column_start":1,"column_end":32}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","byte_start":133,"byte_end":172,"line_start":3,"line_end":3,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\private.rs","byte_start":7038,"byte_end":7051,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"PrivateMarker","qualname":"::private::PrivateMarker","value":"","parent":null,"children":[],"decl_id":null,"docs":" If this type is pub but not publicly reachable, third parties\n can't name it and can't implement traits using it.\n","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\private.rs","byte_start":6987,"byte_end":7026,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"collections","qualname":"::collections","value":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\mod.rs","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":75},{"krate":0,"index":85},{"krate":0,"index":94},{"krate":0,"index":107},{"krate":0,"index":119},{"krate":0,"index":128}],"decl_id":null,"docs":" This module contains the parallel iterator types for standard\n collections. You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\binary_heap.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"binary_heap","qualname":"::collections::binary_heap","value":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\binary_heap.rs","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":3680},{"krate":0,"index":3686},{"krate":0,"index":3683},{"krate":0,"index":66},{"krate":0,"index":3696},{"krate":0,"index":3689},{"krate":0,"index":3702},{"krate":0,"index":3706},{"krate":0,"index":71},{"krate":0,"index":3710},{"krate":0,"index":3725},{"krate":0,"index":3717}],"decl_id":null,"docs":" This module contains the parallel iterator types for heaps\n (`BinaryHeap<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3680},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\binary_heap.rs","byte_start":12742,"byte_end":12750,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::binary_heap::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":3682}],"decl_id":null,"docs":" Parallel iterator over a binary heap\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3702},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\binary_heap.rs","byte_start":13195,"byte_end":13199,"line_start":35,"line_end":35,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::binary_heap::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":3705}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a binary heap\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\btree_map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"btree_map","qualname":"::collections::btree_map","value":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\btree_map.rs","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":3732},{"krate":0,"index":3736},{"krate":0,"index":3740},{"krate":0,"index":3747},{"krate":0,"index":3754},{"krate":0,"index":3759},{"krate":0,"index":80},{"krate":0,"index":3764},{"krate":0,"index":3772},{"krate":0,"index":3780},{"krate":0,"index":3785},{"krate":0,"index":3790},{"krate":0,"index":3798}],"decl_id":null,"docs":" This module contains the parallel iterator types for B-Tree maps\n (`BTreeMap<K, V>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3732},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\btree_map.rs","byte_start":13991,"byte_end":13999,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::btree_map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":3735}],"decl_id":null,"docs":" Parallel iterator over a B-Tree map\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3754},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\btree_map.rs","byte_start":14333,"byte_end":14337,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::btree_map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":3758}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a B-Tree map\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3780},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\btree_map.rs","byte_start":14862,"byte_end":14869,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::btree_map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":3784}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a B-Tree map\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\btree_set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"btree_set","qualname":"::collections::btree_set","value":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\btree_set.rs","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":3806},{"krate":0,"index":3809},{"krate":0,"index":3812},{"krate":0,"index":3818},{"krate":0,"index":3824},{"krate":0,"index":3828},{"krate":0,"index":90},{"krate":0,"index":3832},{"krate":0,"index":3839}],"decl_id":null,"docs":" This module contains the parallel iterator types for B-Tree sets\n (`BTreeSet<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3806},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\btree_set.rs","byte_start":15548,"byte_end":15556,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::btree_set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":3808}],"decl_id":null,"docs":" Parallel iterator over a B-Tree set\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3824},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\btree_set.rs","byte_start":15844,"byte_end":15848,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::btree_set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":3827}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a B-Tree set\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\hash_map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hash_map","qualname":"::collections::hash_map","value":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\hash_map.rs","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":3846},{"krate":0,"index":3850},{"krate":0,"index":3854},{"krate":0,"index":3862},{"krate":0,"index":3869},{"krate":0,"index":3874},{"krate":0,"index":102},{"krate":0,"index":3879},{"krate":0,"index":3888},{"krate":0,"index":3896},{"krate":0,"index":3901},{"krate":0,"index":3906},{"krate":0,"index":3915}],"decl_id":null,"docs":" This module contains the parallel iterator types for hash maps\n (`HashMap<K, V>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3846},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\hash_map.rs","byte_start":16663,"byte_end":16671,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::hash_map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":3849}],"decl_id":null,"docs":" Parallel iterator over a hash map\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3869},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\hash_map.rs","byte_start":17039,"byte_end":17043,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::hash_map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":3873}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a hash map\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3896},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\hash_map.rs","byte_start":17608,"byte_end":17615,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::hash_map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":3900}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a hash map\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\hash_set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hash_set","qualname":"::collections::hash_set","value":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\hash_set.rs","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":3923},{"krate":0,"index":3926},{"krate":0,"index":3929},{"krate":0,"index":3936},{"krate":0,"index":3942},{"krate":0,"index":3946},{"krate":0,"index":115},{"krate":0,"index":3950},{"krate":0,"index":3958}],"decl_id":null,"docs":" This module contains the parallel iterator types for hash sets\n (`HashSet<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3923},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\hash_set.rs","byte_start":18360,"byte_end":18368,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::hash_set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":3925}],"decl_id":null,"docs":" Parallel iterator over a hash set\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3942},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\hash_set.rs","byte_start":18690,"byte_end":18694,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::hash_set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":3945}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a hash set\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\linked_list.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"linked_list","qualname":"::collections::linked_list","value":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\linked_list.rs","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":3965},{"krate":0,"index":3971},{"krate":0,"index":3968},{"krate":0,"index":3974},{"krate":0,"index":3980},{"krate":0,"index":3986},{"krate":0,"index":3990},{"krate":0,"index":124},{"krate":0,"index":3994},{"krate":0,"index":4001},{"krate":0,"index":4008},{"krate":0,"index":4012},{"krate":0,"index":4016},{"krate":0,"index":4023}],"decl_id":null,"docs":" This module contains the parallel iterator types for linked lists\n (`LinkedList<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3965},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\linked_list.rs","byte_start":19504,"byte_end":19512,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::linked_list::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":3967}],"decl_id":null,"docs":" Parallel iterator over a linked list\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3986},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\linked_list.rs","byte_start":19785,"byte_end":19789,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::linked_list::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":3989}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a linked list\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4008},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\linked_list.rs","byte_start":20217,"byte_end":20224,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::linked_list::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":4011}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a linked list\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\vec_deque.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vec_deque","qualname":"::collections::vec_deque","value":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\vec_deque.rs","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":4030},{"krate":0,"index":4036},{"krate":0,"index":4033},{"krate":0,"index":4039},{"krate":0,"index":4052},{"krate":0,"index":4045},{"krate":0,"index":4058},{"krate":0,"index":4062},{"krate":0,"index":134},{"krate":0,"index":138},{"krate":0,"index":4074},{"krate":0,"index":4066},{"krate":0,"index":4081},{"krate":0,"index":4085},{"krate":0,"index":144},{"krate":0,"index":4097},{"krate":0,"index":4089}],"decl_id":null,"docs":" This module contains the parallel iterator types for double-ended queues\n (`VecDeque<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4030},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\vec_deque.rs","byte_start":20836,"byte_end":20844,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::vec_deque::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":4032}],"decl_id":null,"docs":" Parallel iterator over a double-ended queue\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4058},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\vec_deque.rs","byte_start":21130,"byte_end":21134,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::vec_deque::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4061}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a double-ended queue\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4081},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\vec_deque.rs","byte_start":21780,"byte_end":21787,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::vec_deque::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":4084}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a double-ended queue\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::iter","value":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":214},{"krate":0,"index":279},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":458},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":794},{"krate":0,"index":876},{"krate":0,"index":912},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":1094},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1159},{"krate":0,"index":1162},{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1661},{"krate":0,"index":1662},{"krate":0,"index":1765},{"krate":0,"index":1766},{"krate":0,"index":1794},{"krate":0,"index":1835},{"krate":0,"index":1836},{"krate":0,"index":1914},{"krate":0,"index":1917},{"krate":0,"index":1966},{"krate":0,"index":2015},{"krate":0,"index":2094},{"krate":0,"index":2095},{"krate":0,"index":2196},{"krate":0,"index":2197},{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2381},{"krate":0,"index":2548},{"krate":0,"index":2614},{"krate":0,"index":2617},{"krate":0,"index":2620},{"krate":0,"index":2660},{"krate":0,"index":2663},{"krate":0,"index":2681},{"krate":0,"index":2684},{"krate":0,"index":2688},{"krate":0,"index":2693},{"krate":0,"index":2699},{"krate":0,"index":2704},{"krate":0,"index":2710},{"krate":0,"index":2820},{"krate":0,"index":2825},{"krate":0,"index":2884},{"krate":0,"index":2888}],"decl_id":null,"docs":" The `ParallelIterator` module makes it easy to write parallel\n programs using an iterator-style interface. To get access to all\n the methods you want, the easiest is to write `use\n rayon::prelude::*;` at the top of your module, which will import\n the various traits and methods you need.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4112},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\chain.rs","byte_start":82212,"byte_end":82217,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Chain","qualname":"::iter::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":4115},{"krate":0,"index":4116}],"decl_id":null,"docs":" `Chain` is an iterator that joins `b` after `a` in one continuous iterator.\n This struct is created by the [`chain()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\chain.rs","byte_start":82103,"byte_end":82176,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4125},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\enumerate.rs","byte_start":103731,"byte_end":103740,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"Enumerate","qualname":"::iter::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":4127}],"decl_id":null,"docs":" `Enumerate` is an iterator that returns the current count along with the element.\n This struct is created by the [`enumerate()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\enumerate.rs","byte_start":103622,"byte_end":103695,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4134},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\filter.rs","byte_start":107202,"byte_end":107208,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"Filter","qualname":"::iter::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":4137},{"krate":0,"index":4138}],"decl_id":null,"docs":" `Filter` takes a predicate `filter_op` and filters out elements that match.\n This struct is created by the [`filter()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\filter.rs","byte_start":107100,"byte_end":107173,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4143},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\filter_map.rs","byte_start":110735,"byte_end":110744,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"FilterMap","qualname":"::iter::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":4146},{"krate":0,"index":4147}],"decl_id":null,"docs":" `FilterMap` creates an iterator that uses `filter_op` to both filter and map elements.\n This struct is created by the [`filter_map()`] method on [`ParallelIterator`].","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\filter_map.rs","byte_start":110633,"byte_end":110706,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4152},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\flat_map.rs","byte_start":114427,"byte_end":114434,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"FlatMap","qualname":"::iter::flat_map::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":4155},{"krate":0,"index":4156}],"decl_id":null,"docs":" `FlatMap` maps each element to an iterator, then flattens these iterators together.\n This struct is created by the [`flat_map()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\flat_map.rs","byte_start":114325,"byte_end":114398,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4161},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\flatten.rs","byte_start":118660,"byte_end":118667,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::iter::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":4163}],"decl_id":null,"docs":" `Flatten` turns each element to an iterator, then flattens these iterators\n together. This struct is created by the [`flatten()`] method on\n [`ParallelIterator`].","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\flatten.rs","byte_start":118551,"byte_end":118624,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":794},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"plumbing","qualname":"::iter::plumbing","value":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":804},{"krate":0,"index":813},{"krate":0,"index":821},{"krate":0,"index":829},{"krate":0,"index":832},{"krate":0,"index":836},{"krate":0,"index":4170},{"krate":0,"index":4173},{"krate":0,"index":4172},{"krate":0,"index":841},{"krate":0,"index":4175},{"krate":0,"index":4179},{"krate":0,"index":4178},{"krate":0,"index":844},{"krate":0,"index":847},{"krate":0,"index":860},{"krate":0,"index":868},{"krate":0,"index":871}],"decl_id":null,"docs":" Traits and functions used to implement parallel iteration.  These are\n low-level details -- users of parallel iterators should not need to\n interact with them directly.  See `README.md` for a high-level overview.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":799},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":124618,"byte_end":124634,"line_start":12,"line_end":12,"column_start":11,"column_end":27},"name":"ProducerCallback","qualname":"::iter::plumbing::ProducerCallback","value":"ProducerCallback<T>","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":802}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":801},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":124649,"byte_end":124655,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Output","qualname":"::iter::plumbing::ProducerCallback::Output","value":"type Output;","parent":{"krate":0,"index":799},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":124664,"byte_end":124672,"line_start":14,"line_end":14,"column_start":8,"column_end":16},"name":"callback","qualname":"::iter::plumbing::ProducerCallback::callback","value":"fn <P> (self, producer: P) -> Self::Output","parent":{"krate":0,"index":799},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":804},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":124899,"byte_end":124907,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"Producer","qualname":"::iter::plumbing::Producer","value":"Producer: Send + Sized","parent":null,"children":[{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811}],"decl_id":null,"docs":" A producer which will produce a fixed number of items N. This is\n not queryable through the API; the consumer is expected to track\n it.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":805},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":125196,"byte_end":125200,"line_start":25,"line_end":25,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::plumbing::Producer::Item","value":"type Item;","parent":{"krate":0,"index":804},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":806},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":125211,"byte_end":125219,"line_start":26,"line_end":26,"column_start":10,"column_end":18},"name":"IntoIter","qualname":"::iter::plumbing::Producer::IntoIter","value":"type IntoIter: Iterator<Item = Self::Item> + DoubleEndedIterator + ExactSizeIterator;","parent":{"krate":0,"index":804},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":125300,"byte_end":125309,"line_start":28,"line_end":28,"column_start":8,"column_end":17},"name":"into_iter","qualname":"::iter::plumbing::Producer::into_iter","value":"fn (self) -> Self::IntoIter","parent":{"krate":0,"index":804},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":125343,"byte_end":125350,"line_start":30,"line_end":30,"column_start":8,"column_end":15},"name":"min_len","qualname":"::iter::plumbing::Producer::min_len","value":"fn (&self) -> usize","parent":{"krate":0,"index":804},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":125392,"byte_end":125399,"line_start":33,"line_end":33,"column_start":8,"column_end":15},"name":"max_len","qualname":"::iter::plumbing::Producer::max_len","value":"fn (&self) -> usize","parent":{"krate":0,"index":804},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":125587,"byte_end":125595,"line_start":39,"line_end":39,"column_start":8,"column_end":16},"name":"split_at","qualname":"::iter::plumbing::Producer::split_at","value":"fn (self, index: usize) -> (Self, Self)","parent":{"krate":0,"index":804},"children":[],"decl_id":null,"docs":" Split into two producers; one produces items `0..index`, the\n other `index..N`. Index must be less than or equal to `N`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":125862,"byte_end":125871,"line_start":45,"line_end":45,"column_start":8,"column_end":17},"name":"fold_with","qualname":"::iter::plumbing::Producer::fold_with","value":"fn <F> (self, folder: F) -> F","parent":{"krate":0,"index":804},"children":[],"decl_id":null,"docs":" Iterate the producer, feeding each element to `folder`, and\n stop when the folder is full (or all elements have been consumed).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":813},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":126060,"byte_end":126068,"line_start":53,"line_end":53,"column_start":11,"column_end":19},"name":"Consumer","qualname":"::iter::plumbing::Consumer","value":"Consumer<Item>: Send + Sized","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820}],"decl_id":null,"docs":" A consumer which consumes items that are fed to it.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":815},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":126100,"byte_end":126106,"line_start":54,"line_end":54,"column_start":10,"column_end":16},"name":"Folder","qualname":"::iter::plumbing::Consumer::Folder","value":"type Folder: Folder<Item, Result = Self::Result>;","parent":{"krate":0,"index":813},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":816},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":126154,"byte_end":126161,"line_start":55,"line_end":55,"column_start":10,"column_end":17},"name":"Reducer","qualname":"::iter::plumbing::Consumer::Reducer","value":"type Reducer: Reducer<Self::Result>;","parent":{"krate":0,"index":813},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":817},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":126195,"byte_end":126201,"line_start":56,"line_end":56,"column_start":10,"column_end":16},"name":"Result","qualname":"::iter::plumbing::Consumer::Result","value":"type Result: Send;","parent":{"krate":0,"index":813},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":126437,"byte_end":126445,"line_start":62,"line_end":62,"column_start":8,"column_end":16},"name":"split_at","qualname":"::iter::plumbing::Consumer::split_at","value":"fn (self, index: usize) -> (Self, Self, Self::Reducer)","parent":{"krate":0,"index":813},"children":[],"decl_id":null,"docs":" Divide the consumer into two consumers, one processing items\n `0..index` and one processing items from `index..`. Also\n produces a reducer that can be used to reduce the results at\n the end.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":126631,"byte_end":126642,"line_start":66,"line_end":66,"column_start":8,"column_end":19},"name":"into_folder","qualname":"::iter::plumbing::Consumer::into_folder","value":"fn (self) -> Self::Folder","parent":{"krate":0,"index":813},"children":[],"decl_id":null,"docs":" Convert the consumer into a folder that can consume items\n sequentially, eventually producing a final result.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":126801,"byte_end":126805,"line_start":70,"line_end":70,"column_start":8,"column_end":12},"name":"full","qualname":"::iter::plumbing::Consumer::full","value":"fn (&self) -> bool","parent":{"krate":0,"index":813},"children":[],"decl_id":null,"docs":" Hint whether this `Consumer` would like to stop processing\n further items, e.g. if a search has been completed.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":821},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":126835,"byte_end":126841,"line_start":73,"line_end":73,"column_start":11,"column_end":17},"name":"Folder","qualname":"::iter::plumbing::Folder","value":"Folder<Item>: Sized","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":827},{"krate":0,"index":828}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":823},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":126866,"byte_end":126872,"line_start":74,"line_end":74,"column_start":10,"column_end":16},"name":"Result","qualname":"::iter::plumbing::Folder::Result","value":"type Result;","parent":{"krate":0,"index":821},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":126941,"byte_end":126948,"line_start":77,"line_end":77,"column_start":8,"column_end":15},"name":"consume","qualname":"::iter::plumbing::Folder::consume","value":"fn (self, item: Item) -> Self","parent":{"krate":0,"index":821},"children":[],"decl_id":null,"docs":" Consume next item and return new sequential state.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":127069,"byte_end":127081,"line_start":80,"line_end":80,"column_start":8,"column_end":20},"name":"consume_iter","qualname":"::iter::plumbing::Folder::consume_iter","value":"fn <I> (mut self, iter: I) -> Self","parent":{"krate":0,"index":821},"children":[],"decl_id":null,"docs":" Consume items from the iterator until full, and return new sequential state.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":127384,"byte_end":127392,"line_start":93,"line_end":93,"column_start":8,"column_end":16},"name":"complete","qualname":"::iter::plumbing::Folder::complete","value":"fn (self) -> Self::Result","parent":{"krate":0,"index":821},"children":[],"decl_id":null,"docs":" Finish consuming items, produce final result.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":127549,"byte_end":127553,"line_start":97,"line_end":97,"column_start":8,"column_end":12},"name":"full","qualname":"::iter::plumbing::Folder::full","value":"fn (&self) -> bool","parent":{"krate":0,"index":821},"children":[],"decl_id":null,"docs":" Hint whether this `Folder` would like to stop processing\n further items, e.g. if a search has been completed.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":829},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":127583,"byte_end":127590,"line_start":100,"line_end":100,"column_start":11,"column_end":18},"name":"Reducer","qualname":"::iter::plumbing::Reducer","value":"Reducer<Result>","parent":null,"children":[{"krate":0,"index":831}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":127691,"byte_end":127697,"line_start":103,"line_end":103,"column_start":8,"column_end":14},"name":"reduce","qualname":"::iter::plumbing::Reducer::reduce","value":"fn (self, left: Result, right: Result) -> Result","parent":{"krate":0,"index":829},"children":[],"decl_id":null,"docs":" Reduce two final results into one; this is executed after a\n split.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":832},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":127804,"byte_end":127821,"line_start":107,"line_end":107,"column_start":11,"column_end":28},"name":"UnindexedConsumer","qualname":"::iter::plumbing::UnindexedConsumer","value":"UnindexedConsumer<I>: Consumer<I>","parent":null,"children":[{"krate":0,"index":834},{"krate":0,"index":835}],"decl_id":null,"docs":" A stateless consumer can be freely copied.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":128045,"byte_end":128059,"line_start":111,"line_end":111,"column_start":8,"column_end":22},"name":"split_off_left","qualname":"::iter::plumbing::UnindexedConsumer::split_off_left","value":"fn (&self) -> Self","parent":{"krate":0,"index":832},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":128083,"byte_end":128093,"line_start":112,"line_end":112,"column_start":8,"column_end":18},"name":"to_reducer","qualname":"::iter::plumbing::UnindexedConsumer::to_reducer","value":"fn (&self) -> Self::Reducer","parent":{"krate":0,"index":832},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":836},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":128249,"byte_end":128266,"line_start":117,"line_end":117,"column_start":11,"column_end":28},"name":"UnindexedProducer","qualname":"::iter::plumbing::UnindexedProducer","value":"UnindexedProducer: Send + Sized","parent":null,"children":[{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839}],"decl_id":null,"docs":" An unindexed producer that doesn't know its exact length.\n (or can't represent its known length in a `usize`)\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":837},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":128292,"byte_end":128296,"line_start":118,"line_end":118,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::plumbing::UnindexedProducer::Item","value":"type Item;","parent":{"krate":0,"index":836},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":128385,"byte_end":128390,"line_start":121,"line_end":121,"column_start":8,"column_end":13},"name":"split","qualname":"::iter::plumbing::UnindexedProducer::split","value":"fn (self) -> (Self, Option<Self>)","parent":{"krate":0,"index":836},"children":[],"decl_id":null,"docs":" Split midway into a new producer if possible, otherwise return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":128573,"byte_end":128582,"line_start":125,"line_end":125,"column_start":8,"column_end":17},"name":"fold_with","qualname":"::iter::plumbing::UnindexedProducer::fold_with","value":"fn <F> (self, folder: F) -> F","parent":{"krate":0,"index":836},"children":[],"decl_id":null,"docs":" Iterate the producer, feeding each element to `folder`, and\n stop when the folder is full (or all elements have been consumed).\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":847},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":131789,"byte_end":131795,"line_start":218,"line_end":218,"column_start":8,"column_end":14},"name":"bridge","qualname":"::iter::plumbing::bridge","value":"fn <I, C> (mut par_iter: I, consumer: C) -> C::Result","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":860},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":132531,"byte_end":132555,"line_start":245,"line_end":245,"column_start":8,"column_end":32},"name":"bridge_producer_consumer","qualname":"::iter::plumbing::bridge_producer_consumer","value":"fn <P, C> (len: usize, producer: P, consumer: C) -> C::Result","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":868},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":133959,"byte_end":133975,"line_start":282,"line_end":282,"column_start":8,"column_end":24},"name":"bridge_unindexed","qualname":"::iter::plumbing::bridge_unindexed","value":"fn <P, C> (producer: P, consumer: C) -> C::Result","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4181},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\fold.rs","byte_start":137607,"byte_end":137611,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"Fold","qualname":"::iter::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":4185},{"krate":0,"index":4186},{"krate":0,"index":4187}],"decl_id":null,"docs":" `Fold` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`fold()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\fold.rs","byte_start":137505,"byte_end":137578,"line_start":24,"line_end":24,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4193},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\fold.rs","byte_start":141080,"byte_end":141088,"line_start":160,"line_end":160,"column_start":12,"column_end":20},"name":"FoldWith","qualname":"::iter::fold::FoldWith","value":"FoldWith {  }","parent":null,"children":[{"krate":0,"index":4197},{"krate":0,"index":4198},{"krate":0,"index":4199}],"decl_id":null,"docs":" `FoldWith` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`fold_with()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\fold.rs","byte_start":140978,"byte_end":141051,"line_start":158,"line_end":158,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4205},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\skip.rs","byte_start":146010,"byte_end":146014,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Skip","qualname":"::iter::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":4207},{"krate":0,"index":4208}],"decl_id":null,"docs":" `Skip` is an iterator that skips over the first `n` elements.\n This struct is created by the [`skip()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\skip.rs","byte_start":145901,"byte_end":145974,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":1131},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\splitter.rs","byte_start":148020,"byte_end":148025,"line_start":8,"line_end":8,"column_start":8,"column_end":13},"name":"split","qualname":"::iter::splitter::split","value":"fn <D, S> (data: D, splitter: S) -> Split<D, S>","parent":null,"children":[],"decl_id":null,"docs":" The `split` function takes arbitrary data and a closure that knows how to\n split it, and turns this into a `ParallelIterator`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4215},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\splitter.rs","byte_start":148404,"byte_end":148409,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Split","qualname":"::iter::splitter::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":4218},{"krate":0,"index":4219}],"decl_id":null,"docs":" `Split` is a parallel iterator using arbitrary data and a splitting function.\n This struct is created by the [`split()`] function.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4224},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\take.rs","byte_start":150230,"byte_end":150234,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Take","qualname":"::iter::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":4226},{"krate":0,"index":4227}],"decl_id":null,"docs":" `Take` is an iterator that iterates over the first `n` elements.\n This struct is created by the [`take()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\take.rs","byte_start":150121,"byte_end":150194,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4234},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map.rs","byte_start":152373,"byte_end":152376,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"Map","qualname":"::iter::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":4237},{"krate":0,"index":4238}],"decl_id":null,"docs":" `Map` is an iterator that transforms the elements of an underlying iterator.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map.rs","byte_start":152271,"byte_end":152344,"line_start":14,"line_end":14,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4243},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map_with.rs","byte_start":158115,"byte_end":158122,"line_start":15,"line_end":15,"column_start":12,"column_end":19},"name":"MapWith","qualname":"::iter::map_with::MapWith","value":"MapWith {  }","parent":null,"children":[{"krate":0,"index":4247},{"krate":0,"index":4248},{"krate":0,"index":4249}],"decl_id":null,"docs":" `MapWith` is an iterator that transforms the elements of an underlying iterator.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map_with.rs","byte_start":158013,"byte_end":158086,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4255},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\zip.rs","byte_start":166153,"byte_end":166156,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"Zip","qualname":"::iter::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":4258},{"krate":0,"index":4259}],"decl_id":null,"docs":" `Zip` is an iterator that zips up `a` and `b` into a single iterator\n of pairs. This struct is created by the [`zip()`] method on\n [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\zip.rs","byte_start":166044,"byte_end":166117,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4268},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\zip_eq.rs","byte_start":170394,"byte_end":170399,"line_start":15,"line_end":15,"column_start":12,"column_end":17},"name":"ZipEq","qualname":"::iter::zip_eq::ZipEq","value":"ZipEq {  }","parent":null,"children":[{"krate":0,"index":4271}],"decl_id":null,"docs":" An [`IndexedParallelIterator`] that iterates over two parallel iterators of equal\n length simultaneously.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\zip_eq.rs","byte_start":170285,"byte_end":170358,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4280},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\interleave.rs","byte_start":172171,"byte_end":172181,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"Interleave","qualname":"::iter::interleave::Interleave","value":"Interleave {  }","parent":null,"children":[{"krate":0,"index":4283},{"krate":0,"index":4284}],"decl_id":null,"docs":" `Interleave` is an iterator that interleaves elements of iterators\n `i` and `j` in one continuous iterator. This struct is created by\n the [`interleave()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\interleave.rs","byte_start":172062,"byte_end":172135,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4293},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\interleave_shortest.rs","byte_start":181106,"byte_end":181124,"line_start":15,"line_end":15,"column_start":12,"column_end":30},"name":"InterleaveShortest","qualname":"::iter::interleave_shortest::InterleaveShortest","value":"InterleaveShortest {  }","parent":null,"children":[{"krate":0,"index":4296}],"decl_id":null,"docs":" `InterleaveShortest` is an iterator that works similarly to\n `Interleave`, but this version stops returning elements once one\n of the iterators run out.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\interleave_shortest.rs","byte_start":180997,"byte_end":181070,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4305},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\intersperse.rs","byte_start":183344,"byte_end":183355,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"Intersperse","qualname":"::iter::intersperse::Intersperse","value":"Intersperse {  }","parent":null,"children":[{"krate":0,"index":4307},{"krate":0,"index":4308}],"decl_id":null,"docs":" `Intersperse` is an iterator that inserts a particular item between each\n item of the adapted iterator.  This struct is created by the\n [`intersperse()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\intersperse.rs","byte_start":183235,"byte_end":183308,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4315},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\rev.rs","byte_start":193909,"byte_end":193912,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"Rev","qualname":"::iter::rev::Rev","value":"Rev {  }","parent":null,"children":[{"krate":0,"index":4317}],"decl_id":null,"docs":" `Rev` is an iterator that produces elements in reverse order. This struct\n is created by the [`rev()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\rev.rs","byte_start":193800,"byte_end":193873,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4324},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\len.rs","byte_start":196852,"byte_end":196858,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"MinLen","qualname":"::iter::len::MinLen","value":"MinLen {  }","parent":null,"children":[{"krate":0,"index":4326},{"krate":0,"index":4327}],"decl_id":null,"docs":" `MinLen` is an iterator that imposes a minimum length on iterator splits.\n This struct is created by the [`min_len()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\len.rs","byte_start":196743,"byte_end":196816,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4334},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\len.rs","byte_start":199911,"byte_end":199917,"line_start":133,"line_end":133,"column_start":12,"column_end":18},"name":"MaxLen","qualname":"::iter::len::MaxLen","value":"MaxLen {  }","parent":null,"children":[{"krate":0,"index":4336},{"krate":0,"index":4337}],"decl_id":null,"docs":" `MaxLen` is an iterator that imposes a maximum length on iterator splits.\n This struct is created by the [`max_len()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\len.rs","byte_start":199802,"byte_end":199875,"line_start":131,"line_end":131,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4344},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\cloned.rs","byte_start":207041,"byte_end":207047,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Cloned","qualname":"::iter::cloned::Cloned","value":"Cloned {  }","parent":null,"children":[{"krate":0,"index":4346}],"decl_id":null,"docs":" `Cloned` is an iterator that clones the elements of an underlying iterator.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\cloned.rs","byte_start":206932,"byte_end":207005,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4353},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\inspect.rs","byte_start":211631,"byte_end":211638,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"Inspect","qualname":"::iter::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":4356},{"krate":0,"index":4357}],"decl_id":null,"docs":" `Inspect` is an iterator that calls a function with a reference to each\n element before yielding it.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\inspect.rs","byte_start":211529,"byte_end":211602,"line_start":15,"line_end":15,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4362},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\while_some.rs","byte_start":217484,"byte_end":217493,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"WhileSome","qualname":"::iter::while_some::WhileSome","value":"WhileSome {  }","parent":null,"children":[{"krate":0,"index":4364}],"decl_id":null,"docs":" `WhileSome` is an iterator that yields the `Some` elements of an iterator,\n halting as soon as any `None` is produced.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\while_some.rs","byte_start":217375,"byte_end":217448,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":2386},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\unzip.rs","byte_start":228711,"byte_end":228715,"line_start":9,"line_end":9,"column_start":10,"column_end":14},"name":"Left","qualname":"::iter::unzip::UnzipOp::Left","value":"type Left: Send;","parent":{"krate":0,"index":2384},"children":[],"decl_id":null,"docs":" The type of item expected by the left consumer.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2387},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\unzip.rs","byte_start":228790,"byte_end":228795,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Right","qualname":"::iter::unzip::UnzipOp::Right","value":"type Right: Send;","parent":{"krate":0,"index":2384},"children":[],"decl_id":null,"docs":" The type of item expected by the right consumer.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4371},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\repeat.rs","byte_start":239366,"byte_end":239372,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::iter::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":4373}],"decl_id":null,"docs":" Iterator adaptor for [the `repeat()` function](fn.repeat.html).\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2553},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\repeat.rs","byte_start":239924,"byte_end":239930,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::iter::repeat::repeat","value":"fn <T> (elt: T) -> Repeat<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that endlessly repeats `elt` (by\n cloning it). Note that this iterator has \"infinite\" length, so\n typically you would want to use `zip` or `take` or some other\n means to shorten it, or consider using\n [the `repeatn()` function](fn.repeatn.html) instead.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2557},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\repeat.rs","byte_start":240326,"byte_end":240330,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"take","qualname":"<Repeat<T>>::take","value":"fn (self, n: usize) -> RepeatN<T>","parent":null,"children":[],"decl_id":null,"docs":" Take only `n` repeats of the element, similar to the general\n [`take()`](trait.IndexedParallelIterator.html#method.take).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2558},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\repeat.rs","byte_start":240590,"byte_end":240593,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"zip","qualname":"<Repeat<T>>::zip","value":"fn <Z> (self, zip_op: Z) -> Zip<RepeatN<T>, Z::Iter>","parent":null,"children":[],"decl_id":null,"docs":" Iterate tuples repeating the element with items from another\n iterator, similar to the general\n [`zip()`](trait.IndexedParallelIterator.html#method.zip).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4380},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\repeat.rs","byte_start":241752,"byte_end":241759,"line_start":91,"line_end":91,"column_start":12,"column_end":19},"name":"RepeatN","qualname":"::iter::repeat::RepeatN","value":"RepeatN {  }","parent":null,"children":[{"krate":0,"index":4382},{"krate":0,"index":4383}],"decl_id":null,"docs":" Iterator adaptor for [the `repeatn()` function](fn.repeatn.html).\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2574},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\repeat.rs","byte_start":242124,"byte_end":242131,"line_start":107,"line_end":107,"column_start":8,"column_end":15},"name":"repeatn","qualname":"::iter::repeat::repeatn","value":"fn <T> (elt: T, n: usize) -> RepeatN<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that produces `n` repeats of `elt`\n (by cloning it).","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2626},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\empty.rs","byte_start":244925,"byte_end":244930,"line_start":25,"line_end":25,"column_start":8,"column_end":13},"name":"empty","qualname":"::iter::empty::empty","value":"fn <T> () -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that produces nothing.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2628},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\empty.rs","byte_start":245070,"byte_end":245075,"line_start":30,"line_end":30,"column_start":12,"column_end":17},"name":"Empty","qualname":"::iter::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2630}],"decl_id":null,"docs":" Iterator adaptor for [the `empty()` function](fn.empty.html).\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2666},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\once.rs","byte_start":247121,"byte_end":247125,"line_start":24,"line_end":24,"column_start":8,"column_end":12},"name":"once","qualname":"::iter::once::once","value":"fn <T> (item: T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that produces an element exactly once.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4390},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\once.rs","byte_start":247283,"byte_end":247287,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Once","qualname":"::iter::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":4392}],"decl_id":null,"docs":" Iterator adaptor for [the `once()` function](fn.once.html).\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2684},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":25342,"byte_end":25362,"line_start":106,"line_end":106,"column_start":11,"column_end":31},"name":"IntoParallelIterator","qualname":"::iter::IntoParallelIterator","value":"IntoParallelIterator","parent":null,"children":[{"krate":0,"index":2685},{"krate":0,"index":2686},{"krate":0,"index":2687}],"decl_id":null,"docs":" `IntoParallelIterator` implements the conversion to a [`ParallelIterator`].","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2685},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":25374,"byte_end":25378,"line_start":107,"line_end":107,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::IntoParallelIterator::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":2684},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2686},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":25426,"byte_end":25430,"line_start":108,"line_end":108,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::IntoParallelIterator::Item","value":"type Item: Send;","parent":{"krate":0,"index":2684},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2687},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":25446,"byte_end":25459,"line_start":110,"line_end":110,"column_start":8,"column_end":21},"name":"into_par_iter","qualname":"::iter::IntoParallelIterator::into_par_iter","value":"fn (self) -> Self::Iter","parent":{"krate":0,"index":2684},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2688},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":26048,"byte_end":26071,"line_start":126,"line_end":126,"column_start":11,"column_end":34},"name":"IntoParallelRefIterator","qualname":"::iter::IntoParallelRefIterator","value":"IntoParallelRefIterator<'data>","parent":null,"children":[{"krate":0,"index":2690},{"krate":0,"index":2691},{"krate":0,"index":2692}],"decl_id":null,"docs":" `IntoParallelRefIterator` implements the conversion to a\n [`ParallelIterator`], providing shared references to the data.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2690},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":26090,"byte_end":26094,"line_start":127,"line_end":127,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::IntoParallelRefIterator::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":2688},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2691},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":26142,"byte_end":26146,"line_start":128,"line_end":128,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::IntoParallelRefIterator::Item","value":"type Item: Send + 'data;","parent":{"krate":0,"index":2688},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2692},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":26170,"byte_end":26178,"line_start":130,"line_end":130,"column_start":8,"column_end":16},"name":"par_iter","qualname":"::iter::IntoParallelRefIterator::par_iter","value":"fn (&'data self) -> Self::Iter","parent":{"krate":0,"index":2688},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2699},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":27098,"byte_end":27124,"line_start":158,"line_end":158,"column_start":11,"column_end":37},"name":"IntoParallelRefMutIterator","qualname":"::iter::IntoParallelRefMutIterator","value":"IntoParallelRefMutIterator<'data>","parent":null,"children":[{"krate":0,"index":2701},{"krate":0,"index":2702},{"krate":0,"index":2703}],"decl_id":null,"docs":" `IntoParallelRefMutIterator` implements the conversion to a\n [`ParallelIterator`], providing mutable references to the data.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2701},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":27143,"byte_end":27147,"line_start":159,"line_end":159,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::IntoParallelRefMutIterator::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":2699},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2702},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":27195,"byte_end":27199,"line_start":160,"line_end":160,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::IntoParallelRefMutIterator::Item","value":"type Item: Send + 'data;","parent":{"krate":0,"index":2699},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2703},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":27223,"byte_end":27235,"line_start":162,"line_end":162,"column_start":8,"column_end":20},"name":"par_iter_mut","qualname":"::iter::IntoParallelRefMutIterator::par_iter_mut","value":"fn (&'data mut self) -> Self::Iter","parent":{"krate":0,"index":2699},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2710},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":27653,"byte_end":27669,"line_start":177,"line_end":177,"column_start":11,"column_end":27},"name":"ParallelIterator","qualname":"::iter::ParallelIterator","value":"ParallelIterator: Sized + Send","parent":null,"children":[{"krate":0,"index":2711},{"krate":0,"index":2712},{"krate":0,"index":2714},{"krate":0,"index":2718},{"krate":0,"index":2720},{"krate":0,"index":2723},{"krate":0,"index":2727},{"krate":0,"index":2730},{"krate":0,"index":2732},{"krate":0,"index":2734},{"krate":0,"index":2737},{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2744},{"krate":0,"index":2750},{"krate":0,"index":2754},{"krate":0,"index":2757},{"krate":0,"index":2759},{"krate":0,"index":2761},{"krate":0,"index":2762},{"krate":0,"index":2765},{"krate":0,"index":2771},{"krate":0,"index":2772},{"krate":0,"index":2775},{"krate":0,"index":2781},{"krate":0,"index":2783},{"krate":0,"index":2785},{"krate":0,"index":2787},{"krate":0,"index":2789},{"krate":0,"index":2791},{"krate":0,"index":2794},{"krate":0,"index":2797},{"krate":0,"index":2799},{"krate":0,"index":2801},{"krate":0,"index":2806},{"krate":0,"index":2810},{"krate":0,"index":2816},{"krate":0,"index":2817},{"krate":0,"index":2819}],"decl_id":null,"docs":" The `ParallelIterator` interface.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2711},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":27695,"byte_end":27699,"line_start":178,"line_end":178,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::ParallelIterator::Item","value":"type Item: Send;","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2712},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":27918,"byte_end":27926,"line_start":186,"line_end":186,"column_start":8,"column_end":16},"name":"for_each","qualname":"::iter::ParallelIterator::for_each","value":"fn <OP> (self, op: OP) -> ()","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Executes `OP` on each item produced by the iterator, in parallel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2714},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":28339,"byte_end":28352,"line_start":198,"line_end":198,"column_start":8,"column_end":21},"name":"for_each_with","qualname":"::iter::ParallelIterator::for_each_with","value":"fn <OP, T> (self, init: T, op: OP) -> ()","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Executes `OP` on the given `init` value with each item produced by\n the iterator, in parallel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2718},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":28764,"byte_end":28769,"line_start":212,"line_end":212,"column_start":8,"column_end":13},"name":"count","qualname":"::iter::ParallelIterator::count","value":"fn (self) -> usize","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Counts the number of items in this parallel iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2720},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":28938,"byte_end":28941,"line_start":218,"line_end":218,"column_start":8,"column_end":11},"name":"map","qualname":"::iter::ParallelIterator::map","value":"fn <F, R> (self, map_op: F) -> Map<Self, F>","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Applies `map_op` to each item of this iterator, producing a new\n iterator with the results.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2723},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":29420,"byte_end":29428,"line_start":231,"line_end":231,"column_start":8,"column_end":16},"name":"map_with","qualname":"::iter::ParallelIterator::map_with","value":"fn <F, T, R> (self, init: T, map_op: F) -> MapWith<Self, T, F>","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Applies `map_op` to the given `init` value with each item of this\n iterator, producing a new iterator with the results.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2727},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":29807,"byte_end":29813,"line_start":241,"line_end":241,"column_start":8,"column_end":14},"name":"cloned","qualname":"::iter::ParallelIterator::cloned","value":"fn <'a, T> (self) -> Cloned<Self>","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Creates an iterator which clones all of its elements.  This may be\n useful when you have an iterator over `&T`, but you need `T`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2730},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":30566,"byte_end":30573,"line_start":261,"line_end":261,"column_start":8,"column_end":15},"name":"inspect","qualname":"::iter::ParallelIterator::inspect","value":"fn <OP> (self, inspect_op: OP) -> Inspect<Self, OP>","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Applies `inspect_op` to a reference to each item of this iterator,\n producing a new iterator passing through the original items.  This is\n often useful for debugging to see what's happening in iterator stages.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2732},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":31224,"byte_end":31230,"line_start":279,"line_end":279,"column_start":8,"column_end":14},"name":"filter","qualname":"::iter::ParallelIterator::filter","value":"fn <P> (self, filter_op: P) -> Filter<Self, P>","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Applies `filter_op` to each item of this iterator, producing a new\n iterator with only the items that gave `true` results.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2734},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":31537,"byte_end":31547,"line_start":287,"line_end":287,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::iter::ParallelIterator::filter_map","value":"fn <P, R> (self, filter_op: P) -> FilterMap<Self, P>","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Applies `filter_op` to each item of this iterator to get an `Option`,\n producing a new iterator with only the items from `Some` results.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2737},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":31887,"byte_end":31895,"line_start":296,"line_end":296,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::iter::ParallelIterator::flat_map","value":"fn <F, PI> (self, map_op: F) -> FlatMap<Self, F>","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Applies `map_op` to each item of this iterator to get nested iterators,\n producing a new iterator that flattens these back into one.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2740},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":32417,"byte_end":32424,"line_start":313,"line_end":313,"column_start":8,"column_end":15},"name":"flatten","qualname":"::iter::ParallelIterator::flatten","value":"fn (self) -> Flatten<Self>","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" An adaptor that flattens iterable `Item`s into one large iterator","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2741},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":34102,"byte_end":34108,"line_start":349,"line_end":349,"column_start":8,"column_end":14},"name":"reduce","qualname":"::iter::ParallelIterator::reduce","value":"fn <OP, ID> (self, identity: ID, op: OP) -> Self::Item","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using `op`.\n The argument `identity` should be a closure that can produce\n \"identity\" value which may be inserted into the sequence as\n needed to create opportunities for parallel execution. So, for\n example, if you are doing a summation, then `identity()` ought\n to produce something that represents the zero for your type\n (but consider just calling `sum()` in that case).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2744},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":35020,"byte_end":35031,"line_start":370,"line_end":370,"column_start":8,"column_end":19},"name":"reduce_with","qualname":"::iter::ParallelIterator::reduce_with","value":"fn <OP> (self, op: OP) -> Option<Self::Item>","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using `op`.\n If the iterator is empty, `None` is returned; otherwise,\n `Some` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2750},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":41080,"byte_end":41084,"line_start":511,"line_end":511,"column_start":8,"column_end":12},"name":"fold","qualname":"::iter::ParallelIterator::fold","value":"fn <T, ID, F> (self, identity: ID, fold_op: F) -> Fold<Self, ID, F>","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Parallel fold is similar to sequential fold except that the\n sequence of items may be subdivided before it is\n folded. Consider a list of numbers like `22 3 77 89 46`. If\n you used sequential fold to add them (`fold(0, |a,b| a+b)`,\n you would wind up first adding 0 + 22, then 22 + 3, then 25 +\n 77, and so forth. The **parallel fold** works similarly except\n that it first breaks up your list into sublists, and hence\n instead of yielding up a single sum at the end, it yields up\n multiple sums. The number of results is nondeterministic, as\n is the point where the breaks occur.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2754},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":41665,"byte_end":41674,"line_start":525,"line_end":525,"column_start":8,"column_end":17},"name":"fold_with","qualname":"::iter::ParallelIterator::fold_with","value":"fn <F, T> (self, init: T, fold_op: F) -> FoldWith<Self, T, F>","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Applies `fold_op` to the given `init` value with each item of this\n iterator, finally producing the value for further use.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2757},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":42611,"byte_end":42614,"line_start":551,"line_end":551,"column_start":8,"column_end":11},"name":"sum","qualname":"::iter::ParallelIterator::sum","value":"fn <S> (self) -> S","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Sums up the items in the iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2759},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":43565,"byte_end":43572,"line_start":579,"line_end":579,"column_start":8,"column_end":15},"name":"product","qualname":"::iter::ParallelIterator::product","value":"fn <P> (self) -> P","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Multiplies all the items in the iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2761},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":44351,"byte_end":44354,"line_start":602,"line_end":602,"column_start":8,"column_end":11},"name":"min","qualname":"::iter::ParallelIterator::min","value":"fn (self) -> Option<Self::Item>","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Computes the minimum of all the items in the iterator. If the\n iterator is empty, `None` is returned; otherwise, `Some(min)`\n is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2762},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":45045,"byte_end":45051,"line_start":621,"line_end":621,"column_start":8,"column_end":14},"name":"min_by","qualname":"::iter::ParallelIterator::min_by","value":"fn <F> (self, f: F) -> Option<Self::Item>","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Computes the minimum of all the items in the iterator with respect to\n the given comparison function. If the iterator is empty, `None` is\n returned; otherwise, `Some(min)` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2765},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":45901,"byte_end":45911,"line_start":643,"line_end":643,"column_start":8,"column_end":18},"name":"min_by_key","qualname":"::iter::ParallelIterator::min_by_key","value":"fn <K, F> (self, f: F) -> Option<Self::Item>","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Computes the item that yields the minimum value for the given\n function. If the iterator is empty, `None` is returned;\n otherwise, `Some(item)` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2771},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":46815,"byte_end":46818,"line_start":669,"line_end":669,"column_start":8,"column_end":11},"name":"max","qualname":"::iter::ParallelIterator::max","value":"fn (self) -> Option<Self::Item>","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Computes the maximum of all the items in the iterator. If the\n iterator is empty, `None` is returned; otherwise, `Some(max)`\n is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2772},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":47523,"byte_end":47529,"line_start":688,"line_end":688,"column_start":8,"column_end":14},"name":"max_by","qualname":"::iter::ParallelIterator::max_by","value":"fn <F> (self, f: F) -> Option<Self::Item>","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Computes the maximum of all the items in the iterator with respect to\n the given comparison function. If the iterator is empty, `None` is\n returned; otherwise, `Some(min)` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2775},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":48380,"byte_end":48390,"line_start":710,"line_end":710,"column_start":8,"column_end":18},"name":"max_by_key","qualname":"::iter::ParallelIterator::max_by_key","value":"fn <K, F> (self, f: F) -> Option<Self::Item>","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Computes the item that yields the maximum value for the given\n function. If the iterator is empty, `None` is returned;\n otherwise, `Some(item)` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2781},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":48704,"byte_end":48709,"line_start":720,"line_end":720,"column_start":8,"column_end":13},"name":"chain","qualname":"::iter::ParallelIterator::chain","value":"fn <C> (self, chain: C) -> Chain<Self, C::Iter>","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Takes two iterators and creates a new iterator over both.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2783},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":49747,"byte_end":49755,"line_start":744,"line_end":744,"column_start":8,"column_end":16},"name":"find_any","qualname":"::iter::ParallelIterator::find_any","value":"fn <P> (self, predicate: P) -> Option<Self::Item>","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Searches for **some** item in the parallel iterator that\n matches the given predicate and returns it. This operation\n is similar to [`find` on sequential iterators][find] but\n the item returned may not be the **first** one in the parallel\n sequence which matches, since we search the entire sequence in parallel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2785},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":50738,"byte_end":50748,"line_start":768,"line_end":768,"column_start":8,"column_end":18},"name":"find_first","qualname":"::iter::ParallelIterator::find_first","value":"fn <P> (self, predicate: P) -> Option<Self::Item>","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Searches for the sequentially **first** item in the parallel iterator\n that matches the given predicate and returns it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2787},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":51705,"byte_end":51714,"line_start":791,"line_end":791,"column_start":8,"column_end":17},"name":"find_last","qualname":"::iter::ParallelIterator::find_last","value":"fn <P> (self, predicate: P) -> Option<Self::Item>","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Searches for the sequentially **last** item in the parallel iterator\n that matches the given predicate and returns it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2789},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":52030,"byte_end":52034,"line_start":800,"line_end":800,"column_start":8,"column_end":12},"name":"find","qualname":"::iter::ParallelIterator::find","value":"fn <P> (self, predicate: P) -> Option<Self::Item>","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"parallel `find` does not search in order -- use `find_any`, \\\\\n    `find_first`, or `find_last`\")","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":51903,"byte_end":52022,"line_start":798,"line_end":799,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2791},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":52498,"byte_end":52501,"line_start":811,"line_end":811,"column_start":8,"column_end":11},"name":"any","qualname":"::iter::ParallelIterator::any","value":"fn <P> (self, predicate: P) -> bool","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Searches for **some** item in the parallel iterator that\n matches the given predicate, and if so returns true.  Once\n a match is found, we'll attempt to stop process the rest\n of the items.  Proving that there's no match, returning false,\n does require visiting every item.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2794},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":52882,"byte_end":52885,"line_start":820,"line_end":820,"column_start":8,"column_end":11},"name":"all","qualname":"::iter::ParallelIterator::all","value":"fn <P> (self, predicate: P) -> bool","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Tests that every item in the parallel iterator matches the given\n predicate, and if so returns true.  If a counter-example is found,\n we'll attempt to stop processing more items, then return false.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2797},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":53163,"byte_end":53173,"line_start":828,"line_end":828,"column_start":8,"column_end":18},"name":"while_some","qualname":"::iter::ParallelIterator::while_some","value":"fn <T> (self) -> WhileSome<Self>","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Creates an iterator over the `Some` items of this iterator, halting\n as soon as any `None` is found.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2799},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":53718,"byte_end":53725,"line_start":842,"line_end":842,"column_start":8,"column_end":15},"name":"collect","qualname":"::iter::ParallelIterator::collect","value":"fn <C> (self) -> C","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Create a fresh collection containing all the element produced\n by this parallel iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2801},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":54229,"byte_end":54234,"line_start":855,"line_end":855,"column_start":8,"column_end":13},"name":"unzip","qualname":"::iter::ParallelIterator::unzip","value":"fn <A, B, FromA, FromB> (self) -> (FromA, FromB)","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Unzips the items of a parallel iterator into a pair of arbitrary\n `ParallelExtend` containers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2806},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":55076,"byte_end":55085,"line_start":873,"line_end":873,"column_start":8,"column_end":17},"name":"partition","qualname":"::iter::ParallelIterator::partition","value":"fn <A, B, P> (self, predicate: P) -> (A, B)","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Partitions the items of a parallel iterator into a pair of arbitrary\n `ParallelExtend` containers.  Items for which the `predicate` returns\n true go into the first container, and the rest go into the second.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2810},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":55594,"byte_end":55607,"line_start":884,"line_end":884,"column_start":8,"column_end":21},"name":"partition_map","qualname":"::iter::ParallelIterator::partition_map","value":"fn <A, B, P, L, R> (self, predicate: P) -> (A, B)","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Partitions and maps the items of a parallel iterator into a pair of\n arbitrary `ParallelExtend` containers.  `Either::Left` items go into\n the first container, and `Either::Right` items go into the second.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2816},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":56245,"byte_end":56256,"line_start":904,"line_end":904,"column_start":8,"column_end":19},"name":"intersperse","qualname":"::iter::ParallelIterator::intersperse","value":"fn (self, element: Self::Item) -> Intersperse<Self>","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Intersperses clones of an element between items of this iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2817},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":56913,"byte_end":56928,"line_start":922,"line_end":922,"column_start":8,"column_end":23},"name":"drive_unindexed","qualname":"::iter::ParallelIterator::drive_unindexed","value":"fn <C> (self, consumer: C) -> C::Result","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2819},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":57804,"byte_end":57811,"line_start":939,"line_end":939,"column_start":8,"column_end":15},"name":"opt_len","qualname":"::iter::ParallelIterator::opt_len","value":"fn (&mut self) -> Option<usize>","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2825},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":58242,"byte_end":58265,"line_start":958,"line_end":958,"column_start":11,"column_end":34},"name":"IndexedParallelIterator","qualname":"::iter::IndexedParallelIterator","value":"IndexedParallelIterator: ParallelIterator","parent":null,"children":[{"krate":0,"index":2826},{"krate":0,"index":2827},{"krate":0,"index":2830},{"krate":0,"index":2832},{"krate":0,"index":2834},{"krate":0,"index":2836},{"krate":0,"index":2838},{"krate":0,"index":2842},{"krate":0,"index":2846},{"krate":0,"index":2849},{"krate":0,"index":2851},{"krate":0,"index":2853},{"krate":0,"index":2855},{"krate":0,"index":2857},{"krate":0,"index":2859},{"krate":0,"index":2860},{"krate":0,"index":2861},{"krate":0,"index":2862},{"krate":0,"index":2866},{"krate":0,"index":2870},{"krate":0,"index":2874},{"krate":0,"index":2876},{"krate":0,"index":2877},{"krate":0,"index":2878},{"krate":0,"index":2879},{"krate":0,"index":2880},{"krate":0,"index":2882}],"decl_id":null,"docs":" An iterator that supports \"random access\" to its data, meaning\n that you can split it at arbitrary indices and draw data from\n those points.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2826},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":58562,"byte_end":58574,"line_start":963,"line_end":963,"column_start":8,"column_end":20},"name":"collect_into","qualname":"::iter::IndexedParallelIterator::collect_into","value":"fn (self, target: &mut Vec<Self::Item>) -> ()","parent":{"krate":0,"index":2825},"children":[],"decl_id":null,"docs":" Collects the results of the iterator into the specified\n vector. The vector is always truncated before execution\n begins. If possible, reusing the vector across calls can lead\n to better performance since it reuses the same backing buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2827},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":58944,"byte_end":58954,"line_start":971,"line_end":971,"column_start":8,"column_end":18},"name":"unzip_into","qualname":"::iter::IndexedParallelIterator::unzip_into","value":"fn <A, B> (self, left: &mut Vec<A>, right: &mut Vec<B>) -> ()","parent":{"krate":0,"index":2825},"children":[],"decl_id":null,"docs":" Unzips the results of the iterator into the specified\n vectors. The vectors are always truncated before execution\n begins. If possible, reusing the vectors across calls can lead\n to better performance since they reuse the same backing buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2830},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":59474,"byte_end":59477,"line_start":984,"line_end":984,"column_start":8,"column_end":11},"name":"zip","qualname":"::iter::IndexedParallelIterator::zip","value":"fn <Z> (self, zip_op: Z) -> Zip<Self, Z::Iter>","parent":{"krate":0,"index":2825},"children":[],"decl_id":null,"docs":" Iterate over tuples `(A, B)`, where the items `A` are from\n this iterator and `B` are from the iterator given as argument.\n Like the `zip` method on ordinary iterators, if the two\n iterators are of unequal length, you only get the items they\n have in common.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2832},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":60252,"byte_end":60258,"line_start":1010,"line_end":1010,"column_start":8,"column_end":14},"name":"zip_eq","qualname":"::iter::IndexedParallelIterator::zip_eq","value":"fn <Z> (mut self, zip_op: Z) -> ZipEq<Self, Z::Iter>","parent":{"krate":0,"index":2825},"children":[],"decl_id":null,"docs":" The same as `Zip`, but requires that both iterators have the same length.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2834},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":61112,"byte_end":61122,"line_start":1033,"line_end":1033,"column_start":8,"column_end":18},"name":"interleave","qualname":"::iter::IndexedParallelIterator::interleave","value":"fn <I> (self, other: I) -> Interleave<Self, I::Iter>","parent":{"krate":0,"index":2825},"children":[],"decl_id":null,"docs":" Interleave elements of this iterator and the other given\n iterator. Alternately yields elements from this iterator and\n the given iterator, until both are exhausted. If one iterator\n is exhausted before the other, the last elements are provided\n from the other.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2836},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":61738,"byte_end":61757,"line_start":1051,"line_end":1051,"column_start":8,"column_end":27},"name":"interleave_shortest","qualname":"::iter::IndexedParallelIterator::interleave_shortest","value":"fn <I> (self, other: I) -> InterleaveShortest<Self, I::Iter>","parent":{"krate":0,"index":2825},"children":[],"decl_id":null,"docs":" Interleave elements of this iterator and the other given\n iterator, until one is exhausted.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2838},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":62126,"byte_end":62129,"line_start":1060,"line_end":1060,"column_start":8,"column_end":11},"name":"cmp","qualname":"::iter::IndexedParallelIterator::cmp","value":"fn <I> (mut self, other: I) -> Ordering","parent":{"krate":0,"index":2825},"children":[],"decl_id":null,"docs":" Lexicographically compares the elements of this `ParallelIterator` with those of\n another.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2842},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":62681,"byte_end":62692,"line_start":1075,"line_end":1075,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"::iter::IndexedParallelIterator::partial_cmp","value":"fn <I> (mut self, other: I) -> Option<Ordering>","parent":{"krate":0,"index":2825},"children":[],"decl_id":null,"docs":" Lexicographically compares the elements of this `ParallelIterator` with those of\n another.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2846},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":63270,"byte_end":63272,"line_start":1090,"line_end":1090,"column_start":8,"column_end":10},"name":"eq","qualname":"::iter::IndexedParallelIterator::eq","value":"fn <I> (mut self, other: I) -> bool","parent":{"krate":0,"index":2825},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are equal to those of another\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2849},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":63681,"byte_end":63683,"line_start":1101,"line_end":1101,"column_start":8,"column_end":10},"name":"ne","qualname":"::iter::IndexedParallelIterator::ne","value":"fn <I> (self, other: I) -> bool","parent":{"krate":0,"index":2825},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are unequal to those of another\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2851},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":64007,"byte_end":64009,"line_start":1111,"line_end":1111,"column_start":8,"column_end":10},"name":"lt","qualname":"::iter::IndexedParallelIterator::lt","value":"fn <I> (self, other: I) -> bool","parent":{"krate":0,"index":2825},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are lexicographically less than those of another.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2853},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":64355,"byte_end":64357,"line_start":1121,"line_end":1121,"column_start":8,"column_end":10},"name":"le","qualname":"::iter::IndexedParallelIterator::le","value":"fn <I> (self, other: I) -> bool","parent":{"krate":0,"index":2825},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are less or equal to those of another.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2855},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":64772,"byte_end":64774,"line_start":1132,"line_end":1132,"column_start":8,"column_end":10},"name":"gt","qualname":"::iter::IndexedParallelIterator::gt","value":"fn <I> (self, other: I) -> bool","parent":{"krate":0,"index":2825},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are lexicographically greater than those of another.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2857},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":65123,"byte_end":65125,"line_start":1142,"line_end":1142,"column_start":8,"column_end":10},"name":"ge","qualname":"::iter::IndexedParallelIterator::ge","value":"fn <I> (self, other: I) -> bool","parent":{"krate":0,"index":2825},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are less or equal to those of another.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2859},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":65466,"byte_end":65475,"line_start":1152,"line_end":1152,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::iter::IndexedParallelIterator::enumerate","value":"fn (self) -> Enumerate<Self>","parent":{"krate":0,"index":2825},"children":[],"decl_id":null,"docs":" Yields an index along with each item.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2860},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":65609,"byte_end":65613,"line_start":1157,"line_end":1157,"column_start":8,"column_end":12},"name":"skip","qualname":"::iter::IndexedParallelIterator::skip","value":"fn (self, n: usize) -> Skip<Self>","parent":{"krate":0,"index":2825},"children":[],"decl_id":null,"docs":" Creates an iterator that skips the first `n` elements.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2861},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":65751,"byte_end":65755,"line_start":1162,"line_end":1162,"column_start":8,"column_end":12},"name":"take","qualname":"::iter::IndexedParallelIterator::take","value":"fn (self, n: usize) -> Take<Self>","parent":{"krate":0,"index":2825},"children":[],"decl_id":null,"docs":" Creates an iterator that yields the first `n` elements.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2862},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":66150,"byte_end":66162,"line_start":1171,"line_end":1171,"column_start":8,"column_end":20},"name":"position_any","qualname":"::iter::IndexedParallelIterator::position_any","value":"fn <P> (self, predicate: P) -> Option<usize>","parent":{"krate":0,"index":2825},"children":[],"decl_id":null,"docs":" Searches for **some** item in the parallel iterator that\n matches the given predicate, and returns its index.  Like\n `ParallelIterator::find_any`, the parallel search will not\n necessarily find the **first** match, and once a match is\n found we'll attempt to stop processing any more.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2866},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":67048,"byte_end":67062,"line_start":1192,"line_end":1192,"column_start":8,"column_end":22},"name":"position_first","qualname":"::iter::IndexedParallelIterator::position_first","value":"fn <P> (self, predicate: P) -> Option<usize>","parent":{"krate":0,"index":2825},"children":[],"decl_id":null,"docs":" Searches for the sequentially **first** item in the parallel iterator\n that matches the given predicate, and returns its index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2870},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":67916,"byte_end":67929,"line_start":1213,"line_end":1213,"column_start":8,"column_end":21},"name":"position_last","qualname":"::iter::IndexedParallelIterator::position_last","value":"fn <P> (self, predicate: P) -> Option<usize>","parent":{"krate":0,"index":2825},"children":[],"decl_id":null,"docs":" Searches for the sequentially **last** item in the parallel iterator\n that matches the given predicate, and returns its index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2874},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":68321,"byte_end":68329,"line_start":1225,"line_end":1225,"column_start":8,"column_end":16},"name":"position","qualname":"::iter::IndexedParallelIterator::position","value":"fn <P> (self, predicate: P) -> Option<usize>","parent":{"krate":0,"index":2825},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"parallel `position` does not search in order -- use `position_any`, \\\\\n    `position_first`, or `position_last`\")","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":68178,"byte_end":68313,"line_start":1223,"line_end":1224,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2876},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":68574,"byte_end":68577,"line_start":1233,"line_end":1233,"column_start":8,"column_end":11},"name":"rev","qualname":"::iter::IndexedParallelIterator::rev","value":"fn (self) -> Rev<Self>","parent":{"krate":0,"index":2825},"children":[],"decl_id":null,"docs":" Produces a new iterator with the elements of this iterator in\n reverse order.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2877},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":68850,"byte_end":68862,"line_start":1240,"line_end":1240,"column_start":8,"column_end":20},"name":"with_min_len","qualname":"::iter::IndexedParallelIterator::with_min_len","value":"fn (self, min: usize) -> MinLen<Self>","parent":{"krate":0,"index":2825},"children":[],"decl_id":null,"docs":" Sets the minimum length of iterators desired to process in each\n thread.  Rayon will not split any smaller than this length, but\n of course an iterator could already be smaller to begin with.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2878},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":69263,"byte_end":69275,"line_start":1249,"line_end":1249,"column_start":8,"column_end":20},"name":"with_max_len","qualname":"::iter::IndexedParallelIterator::with_max_len","value":"fn (self, max: usize) -> MaxLen<Self>","parent":{"krate":0,"index":2825},"children":[],"decl_id":null,"docs":" Sets the maximum length of iterators desired to process in each\n thread.  Rayon will try to split at least below this length,\n unless that would put it below the length from `with_min_len()`.\n For example, given min=10 and max=15, a length of 16 will not be\n split any further.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2879},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":69475,"byte_end":69478,"line_start":1255,"line_end":1255,"column_start":8,"column_end":11},"name":"len","qualname":"::iter::IndexedParallelIterator::len","value":"fn (&mut self) -> usize","parent":{"krate":0,"index":2825},"children":[],"decl_id":null,"docs":" Produces an exact count of how many items this iterator will\n produce, presuming no panic occurs.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2880},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":70182,"byte_end":70187,"line_start":1271,"line_end":1271,"column_start":8,"column_end":13},"name":"drive","qualname":"::iter::IndexedParallelIterator::drive","value":"fn <C> (self, consumer: C) -> C::Result","parent":{"krate":0,"index":2825},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2882},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":70963,"byte_end":70976,"line_start":1288,"line_end":1288,"column_start":8,"column_end":21},"name":"with_producer","qualname":"::iter::IndexedParallelIterator::with_producer","value":"fn <CB> (self, callback: CB) -> CB::Output","parent":{"krate":0,"index":2825},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2884},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":71464,"byte_end":71484,"line_start":1299,"line_end":1299,"column_start":11,"column_end":31},"name":"FromParallelIterator","qualname":"::iter::FromParallelIterator","value":"FromParallelIterator<T>","parent":null,"children":[{"krate":0,"index":2886}],"decl_id":null,"docs":" `FromParallelIterator` implements the conversion from a [`ParallelIterator`].\n By implementing `FromParallelIterator` for a type, you define how it will be\n created from an iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2886},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":71515,"byte_end":71528,"line_start":1302,"line_end":1302,"column_start":8,"column_end":21},"name":"from_par_iter","qualname":"::iter::FromParallelIterator::from_par_iter","value":"fn <I> (par_iter: I) -> Self","parent":{"krate":0,"index":2884},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2888},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":71757,"byte_end":71771,"line_start":1308,"line_end":1308,"column_start":11,"column_end":25},"name":"ParallelExtend","qualname":"::iter::ParallelExtend","value":"ParallelExtend<T>","parent":null,"children":[{"krate":0,"index":2890}],"decl_id":null,"docs":" `ParallelExtend` extends an existing collection with items from a [`ParallelIterator`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2890},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":71802,"byte_end":71812,"line_start":1311,"line_end":1311,"column_start":8,"column_end":18},"name":"par_extend","qualname":"::iter::ParallelExtend::par_extend","value":"fn <I> (&mut self, par_iter: I) -> ()","parent":{"krate":0,"index":2888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2892},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\option.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"option","qualname":"::option","value":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\option.rs","parent":null,"children":[{"krate":0,"index":2893},{"krate":0,"index":2894},{"krate":0,"index":2895},{"krate":0,"index":2896},{"krate":0,"index":4399},{"krate":0,"index":4405},{"krate":0,"index":4402},{"krate":0,"index":2899},{"krate":0,"index":2904},{"krate":0,"index":2910},{"krate":0,"index":4408},{"krate":0,"index":4412},{"krate":0,"index":2917},{"krate":0,"index":2921},{"krate":0,"index":4424},{"krate":0,"index":4416},{"krate":0,"index":4431},{"krate":0,"index":4435},{"krate":0,"index":2927},{"krate":0,"index":4447},{"krate":0,"index":4439},{"krate":0,"index":2933},{"krate":0,"index":2936},{"krate":0,"index":2942}],"decl_id":null,"docs":" This module contains the parallel iterator types for options\n (`Option<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4399},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\option.rs","byte_start":248448,"byte_end":248456,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::option::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":4401}],"decl_id":null,"docs":" Parallel iterator over an option\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4408},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\option.rs","byte_start":249688,"byte_end":249692,"line_start":68,"line_end":68,"column_start":12,"column_end":16},"name":"Iter","qualname":"::option::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4411}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to an option\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4431},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\option.rs","byte_start":250259,"byte_end":250266,"line_start":95,"line_end":95,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::option::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":4434}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to an option\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2949},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\prelude.rs","parent":null,"children":[{"krate":0,"index":2950},{"krate":0,"index":2951},{"krate":0,"index":2952},{"krate":0,"index":2953},{"krate":0,"index":2954},{"krate":0,"index":2955},{"krate":0,"index":2956},{"krate":0,"index":2957},{"krate":0,"index":2958},{"krate":0,"index":2959}],"decl_id":null,"docs":" The rayon prelude imports the various `ParallelIterator` traits.\n The intention is that one can include `use rayon::prelude::*` and\n have easy access to the various traits and methods you will need.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2960},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\range.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"range","qualname":"::range","value":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\range.rs","parent":null,"children":[{"krate":0,"index":2961},{"krate":0,"index":2962},{"krate":0,"index":2963},{"krate":0,"index":4454},{"krate":0,"index":4460},{"krate":0,"index":4457},{"krate":0,"index":2964},{"krate":0,"index":2969},{"krate":0,"index":2972},{"krate":0,"index":2977},{"krate":0,"index":2978},{"krate":0,"index":4463},{"krate":0,"index":4468},{"krate":0,"index":4474},{"krate":0,"index":4479},{"krate":0,"index":4484},{"krate":0,"index":4490},{"krate":0,"index":4495},{"krate":0,"index":4500},{"krate":0,"index":4506},{"krate":0,"index":4511},{"krate":0,"index":4516},{"krate":0,"index":4522},{"krate":0,"index":4527},{"krate":0,"index":4532},{"krate":0,"index":4538},{"krate":0,"index":4543},{"krate":0,"index":4548},{"krate":0,"index":4554},{"krate":0,"index":4559},{"krate":0,"index":4564},{"krate":0,"index":4570},{"krate":0,"index":4575},{"krate":0,"index":4580},{"krate":0,"index":4586},{"krate":0,"index":4591},{"krate":0,"index":4593},{"krate":0,"index":4597},{"krate":0,"index":4602},{"krate":0,"index":4604},{"krate":0,"index":4608}],"decl_id":null,"docs":" This module contains the parallel iterator types for ranges\n (`Range<T>`); this is the type for values created by a `a..b`\n expression. You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n \n ```\n use rayon::prelude::*;\n \n let r = (0..100u64).into_par_iter()\n                    .sum();\n \n // compare result with sequential calculation\n assert_eq!((0..100).sum::<u64>(), r);\n ```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4454},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\range.rs","byte_start":253808,"byte_end":253812,"line_start":42,"line_end":42,"column_start":12,"column_end":16},"name":"Iter","qualname":"::range::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4456}],"decl_id":null,"docs":" Parallel iterator over a range, implemented for all integer types.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2979},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\result.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"result","qualname":"::result","value":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\result.rs","parent":null,"children":[{"krate":0,"index":2980},{"krate":0,"index":2981},{"krate":0,"index":2982},{"krate":0,"index":2983},{"krate":0,"index":4613},{"krate":0,"index":4619},{"krate":0,"index":4616},{"krate":0,"index":2984},{"krate":0,"index":4629},{"krate":0,"index":4622},{"krate":0,"index":4635},{"krate":0,"index":4639},{"krate":0,"index":2990},{"krate":0,"index":2994},{"krate":0,"index":4651},{"krate":0,"index":4643},{"krate":0,"index":4658},{"krate":0,"index":4662},{"krate":0,"index":3001},{"krate":0,"index":4674},{"krate":0,"index":4666},{"krate":0,"index":3008}],"decl_id":null,"docs":" This module contains the parallel iterator types for results\n (`Result<T, E>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4613},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\result.rs","byte_start":258547,"byte_end":258555,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::result::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":4615}],"decl_id":null,"docs":" Parallel iterator over a result\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4635},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\result.rs","byte_start":258976,"byte_end":258980,"line_start":34,"line_end":34,"column_start":12,"column_end":16},"name":"Iter","qualname":"::result::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4638}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a result\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4658},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\result.rs","byte_start":259565,"byte_end":259572,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::result::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":4661}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a result\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3016},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"slice","qualname":"::slice","value":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","parent":null,"children":[{"krate":0,"index":3017},{"krate":0,"index":3099},{"krate":0,"index":3181},{"krate":0,"index":3182},{"krate":0,"index":3183},{"krate":0,"index":3184},{"krate":0,"index":3185},{"krate":0,"index":3186},{"krate":0,"index":3187},{"krate":0,"index":3188},{"krate":0,"index":3191},{"krate":0,"index":3198},{"krate":0,"index":3201},{"krate":0,"index":3225},{"krate":0,"index":3228},{"krate":0,"index":3234},{"krate":0,"index":3240},{"krate":0,"index":3246},{"krate":0,"index":4701},{"krate":0,"index":4705},{"krate":0,"index":3252},{"krate":0,"index":3256},{"krate":0,"index":3263},{"krate":0,"index":3271},{"krate":0,"index":3275},{"krate":0,"index":4709},{"krate":0,"index":4714},{"krate":0,"index":3282},{"krate":0,"index":3286},{"krate":0,"index":3293},{"krate":0,"index":3301},{"krate":0,"index":3306},{"krate":0,"index":4718},{"krate":0,"index":4723},{"krate":0,"index":3313},{"krate":0,"index":3317},{"krate":0,"index":3324},{"krate":0,"index":3332},{"krate":0,"index":3337},{"krate":0,"index":4727},{"krate":0,"index":4731},{"krate":0,"index":3344},{"krate":0,"index":3351},{"krate":0,"index":3359},{"krate":0,"index":3363},{"krate":0,"index":4735},{"krate":0,"index":4740},{"krate":0,"index":3370},{"krate":0,"index":3377},{"krate":0,"index":3385},{"krate":0,"index":3390},{"krate":0,"index":3397},{"krate":0,"index":3403},{"krate":0,"index":3408},{"krate":0,"index":3413},{"krate":0,"index":3420},{"krate":0,"index":3431},{"krate":0,"index":3437},{"krate":0,"index":3442},{"krate":0,"index":3449}],"decl_id":null,"docs":" This module contains the parallel iterator types for slices\n (`[T]`). You will rarely need to interact with it directly unless\n you have need to name one of those types.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3191},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":261580,"byte_end":261593,"line_start":20,"line_end":20,"column_start":11,"column_end":24},"name":"ParallelSlice","qualname":"::slice::ParallelSlice","value":"ParallelSlice<T: Sync>","parent":null,"children":[{"krate":0,"index":3193},{"krate":0,"index":3194},{"krate":0,"index":3196},{"krate":0,"index":3197}],"decl_id":null,"docs":" Parallel extensions for slices.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3193},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":261712,"byte_end":261729,"line_start":23,"line_end":23,"column_start":8,"column_end":25},"name":"as_parallel_slice","qualname":"::slice::ParallelSlice::as_parallel_slice","value":"fn (&self) -> &[T]","parent":{"krate":0,"index":3191},"children":[],"decl_id":null,"docs":" Returns a plain slice, which is used to implement the rest of the\n parallel methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3194},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":261861,"byte_end":261870,"line_start":27,"line_end":27,"column_start":8,"column_end":17},"name":"par_split","qualname":"::slice::ParallelSlice::par_split","value":"fn <P> (&self, separator: P) -> Split<T, P>","parent":{"krate":0,"index":3191},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over subslices separated by elements that\n match the separator.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3196},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":262192,"byte_end":262203,"line_start":38,"line_end":38,"column_start":8,"column_end":19},"name":"par_windows","qualname":"::slice::ParallelSlice::par_windows","value":"fn (&self, window_size: usize) -> Windows<T>","parent":{"krate":0,"index":3191},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over all contiguous windows of\n length `size`. The windows overlap.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3197},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":262493,"byte_end":262503,"line_start":47,"line_end":47,"column_start":8,"column_end":18},"name":"par_chunks","qualname":"::slice::ParallelSlice::par_chunks","value":"fn (&self, chunk_size: usize) -> Chunks<T>","parent":{"krate":0,"index":3191},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over at most `size` elements of\n `self` at a time. The chunks do not overlap.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3201},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":262836,"byte_end":262852,"line_start":64,"line_end":64,"column_start":11,"column_end":27},"name":"ParallelSliceMut","qualname":"::slice::ParallelSliceMut","value":"ParallelSliceMut<T: Send>","parent":null,"children":[{"krate":0,"index":3203},{"krate":0,"index":3204},{"krate":0,"index":3206},{"krate":0,"index":3207},{"krate":0,"index":3209},{"krate":0,"index":3212},{"krate":0,"index":3216},{"krate":0,"index":3218},{"krate":0,"index":3221}],"decl_id":null,"docs":" Parallel extensions for mutable slices.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3203},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":262979,"byte_end":263000,"line_start":67,"line_end":67,"column_start":8,"column_end":29},"name":"as_parallel_slice_mut","qualname":"::slice::ParallelSliceMut::as_parallel_slice_mut","value":"fn (&mut self) -> &mut [T]","parent":{"krate":0,"index":3201},"children":[],"decl_id":null,"docs":" Returns a plain mutable slice, which is used to implement the rest of\n the parallel methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3204},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":263148,"byte_end":263161,"line_start":71,"line_end":71,"column_start":8,"column_end":21},"name":"par_split_mut","qualname":"::slice::ParallelSliceMut::par_split_mut","value":"fn <P> (&mut self, separator: P) -> SplitMut<T, P>","parent":{"krate":0,"index":3201},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over mutable subslices separated by\n elements that match the separator.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3206},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":263523,"byte_end":263537,"line_start":82,"line_end":82,"column_start":8,"column_end":22},"name":"par_chunks_mut","qualname":"::slice::ParallelSliceMut::par_chunks_mut","value":"fn (&mut self, chunk_size: usize) -> ChunksMut<T>","parent":{"krate":0,"index":3201},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over at most `size` elements of\n `self` at a time. The chunks are mutable and do not overlap.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3207},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":265169,"byte_end":265177,"line_start":122,"line_end":122,"column_start":8,"column_end":16},"name":"par_sort","qualname":"::slice::ParallelSliceMut::par_sort","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":3201},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3209},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":266912,"byte_end":266923,"line_start":165,"line_end":165,"column_start":8,"column_end":19},"name":"par_sort_by","qualname":"::slice::ParallelSliceMut::par_sort_by","value":"fn <F> (&mut self, compare: F) -> ()","parent":{"krate":0,"index":3201},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a comparator function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3212},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":268635,"byte_end":268650,"line_start":205,"line_end":205,"column_start":8,"column_end":23},"name":"par_sort_by_key","qualname":"::slice::ParallelSliceMut::par_sort_by_key","value":"fn <B, F> (&mut self, f: F) -> ()","parent":{"krate":0,"index":3201},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a key extraction function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3216},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":270095,"byte_end":270112,"line_start":244,"line_end":244,"column_start":8,"column_end":25},"name":"par_sort_unstable","qualname":"::slice::ParallelSliceMut::par_sort_unstable","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":3201},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel, but may not preserve the order of equal elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3218},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":271672,"byte_end":271692,"line_start":286,"line_end":286,"column_start":8,"column_end":28},"name":"par_sort_unstable_by","qualname":"::slice::ParallelSliceMut::par_sort_unstable_by","value":"fn <F> (&mut self, compare: F) -> ()","parent":{"krate":0,"index":3201},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a comparator function, but may not preserve the order of\n equal elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3221},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":273212,"byte_end":273236,"line_start":325,"line_end":325,"column_start":8,"column_end":32},"name":"par_sort_unstable_by_key","qualname":"::slice::ParallelSliceMut::par_sort_unstable_by_key","value":"fn <B, F> (&mut self, f: F) -> ()","parent":{"krate":0,"index":3201},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a key extraction function, but may not preserve the order\n of equal elements.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4701},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":274488,"byte_end":274492,"line_start":381,"line_end":381,"column_start":12,"column_end":16},"name":"Iter","qualname":"::slice::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4704}],"decl_id":null,"docs":" Parallel iterator over immutable items in a slice\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4709},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":276017,"byte_end":276023,"line_start":444,"line_end":444,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::slice::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":4712},{"krate":0,"index":4713}],"decl_id":null,"docs":" Parallel iterator over immutable non-overlapping chunks of a slice\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4718},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":277981,"byte_end":277988,"line_start":520,"line_end":520,"column_start":12,"column_end":19},"name":"Windows","qualname":"::slice::Windows","value":"Windows {  }","parent":null,"children":[{"krate":0,"index":4721},{"krate":0,"index":4722}],"decl_id":null,"docs":" Parallel iterator over immutable overlapping windows of a slice\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4727},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":280045,"byte_end":280052,"line_start":598,"line_end":598,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::slice::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":4730}],"decl_id":null,"docs":" Parallel iterator over mutable items in a slice\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4735},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":281507,"byte_end":281516,"line_start":655,"line_end":655,"column_start":12,"column_end":21},"name":"ChunksMut","qualname":"::slice::ChunksMut","value":"ChunksMut {  }","parent":null,"children":[{"krate":0,"index":4738},{"krate":0,"index":4739}],"decl_id":null,"docs":" Parallel iterator over mutable non-overlapping chunks of a slice\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3397},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":283380,"byte_end":283385,"line_start":724,"line_end":724,"column_start":12,"column_end":17},"name":"Split","qualname":"::slice::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":3401},{"krate":0,"index":3402}],"decl_id":null,"docs":" Parallel iterator over slices separated by a predicate\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3431},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":285252,"byte_end":285260,"line_start":796,"line_end":796,"column_start":12,"column_end":20},"name":"SplitMut","qualname":"::slice::SplitMut","value":"SplitMut {  }","parent":null,"children":[{"krate":0,"index":3435},{"krate":0,"index":3436}],"decl_id":null,"docs":" Parallel iterator over mutable slices separated by a predicate\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3460},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"str","qualname":"::str","value":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","parent":null,"children":[{"krate":0,"index":3461},{"krate":0,"index":3462},{"krate":0,"index":3463},{"krate":0,"index":3464},{"krate":0,"index":3465},{"krate":0,"index":3468},{"krate":0,"index":3477},{"krate":0,"index":3479},{"krate":0,"index":3488},{"krate":0,"index":3489},{"krate":0,"index":3496},{"krate":0,"index":4747},{"krate":0,"index":4753},{"krate":0,"index":4750},{"krate":0,"index":3504},{"krate":0,"index":3507},{"krate":0,"index":3512},{"krate":0,"index":4756},{"krate":0,"index":4765},{"krate":0,"index":4761},{"krate":0,"index":3518},{"krate":0,"index":3522},{"krate":0,"index":3528},{"krate":0,"index":4769},{"krate":0,"index":4778},{"krate":0,"index":4774},{"krate":0,"index":3538},{"krate":0,"index":3544},{"krate":0,"index":3548},{"krate":0,"index":3553},{"krate":0,"index":3559},{"krate":0,"index":4782},{"krate":0,"index":4789},{"krate":0,"index":4786},{"krate":0,"index":3568},{"krate":0,"index":4792},{"krate":0,"index":4799},{"krate":0,"index":4796},{"krate":0,"index":3574}],"decl_id":null,"docs":" This module contains extension methods for `String` that expose\n parallel iterators, such as `par_split_whitespace()`. You will\n rarely need to interact with it directly, since if you add `use\n rayon::prelude::*` to your file, that will include the helper\n traits defined in this module.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3468},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":348359,"byte_end":348373,"line_start":47,"line_end":47,"column_start":11,"column_end":25},"name":"ParallelString","qualname":"::str::ParallelString","value":"ParallelString","parent":null,"children":[{"krate":0,"index":3469},{"krate":0,"index":3470},{"krate":0,"index":3471},{"krate":0,"index":3473},{"krate":0,"index":3475},{"krate":0,"index":3476}],"decl_id":null,"docs":" Parallel extensions for strings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3469},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":348490,"byte_end":348508,"line_start":50,"line_end":50,"column_start":8,"column_end":26},"name":"as_parallel_string","qualname":"::str::ParallelString::as_parallel_string","value":"fn (&self) -> &str","parent":{"krate":0,"index":3468},"children":[],"decl_id":null,"docs":" Returns a plain string slice, which is used to implement the rest of\n the parallel methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3470},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":348602,"byte_end":348611,"line_start":53,"line_end":53,"column_start":8,"column_end":17},"name":"par_chars","qualname":"::str::ParallelString::par_chars","value":"fn (&self) -> Chars","parent":{"krate":0,"index":3468},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the characters of a string.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3471},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":348991,"byte_end":349000,"line_start":62,"line_end":62,"column_start":8,"column_end":17},"name":"par_split","qualname":"::str::ParallelString::par_split","value":"fn <P> (&self, separator: P) -> Split<P>","parent":{"krate":0,"index":3468},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings separated by a\n given character or predicate, similar to `str::split`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3473},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":349549,"byte_end":349569,"line_start":73,"line_end":73,"column_start":8,"column_end":28},"name":"par_split_terminator","qualname":"::str::ParallelString::par_split_terminator","value":"fn <P> (&self, terminator: P) -> SplitTerminator<P>","parent":{"krate":0,"index":3468},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings terminated by a\n given character or predicate, similar to `str::split_terminator`.\n It's equivalent to `par_split`, except it doesn't produce an empty\n substring after a trailing terminator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3475},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":349972,"byte_end":349981,"line_start":81,"line_end":81,"column_start":8,"column_end":17},"name":"par_lines","qualname":"::str::ParallelString::par_lines","value":"fn (&self) -> Lines","parent":{"krate":0,"index":3468},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the lines of a string, ending with an\n optional carriage return and with a newline (`\\r\\n` or just `\\n`).\n The final line ending is optional, and line endings are not included in\n the output strings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3476},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":350335,"byte_end":350355,"line_start":90,"line_end":90,"column_start":8,"column_end":28},"name":"par_split_whitespace","qualname":"::str::ParallelString::par_split_whitespace","value":"fn (&self) -> SplitWhitespace","parent":{"krate":0,"index":3468},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the sub-slices of a string that are\n separated by any amount of whitespace.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3481},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":351169,"byte_end":351176,"line_start":116,"line_end":116,"column_start":15,"column_end":22},"name":"Pattern","qualname":"::str::private::Pattern","value":"Pattern: Sized + Sync + Send","parent":null,"children":[{"krate":0,"index":4744},{"krate":0,"index":3482},{"krate":0,"index":3483},{"krate":0,"index":3484},{"krate":0,"index":3485}],"decl_id":null,"docs":" Pattern-matching trait for `ParallelString`, somewhat like a mix of\n `std::str::pattern::{Pattern, Searcher}`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3482},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":351235,"byte_end":351242,"line_start":118,"line_end":118,"column_start":12,"column_end":19},"name":"find_in","qualname":"::str::private::Pattern::find_in","value":"fn (&self, &str) -> Option<usize>","parent":{"krate":0,"index":3481},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3483},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":351285,"byte_end":351293,"line_start":119,"line_end":119,"column_start":12,"column_end":20},"name":"rfind_in","qualname":"::str::private::Pattern::rfind_in","value":"fn (&self, &str) -> Option<usize>","parent":{"krate":0,"index":3481},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3484},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":351336,"byte_end":351348,"line_start":120,"line_end":120,"column_start":12,"column_end":24},"name":"is_suffix_of","qualname":"::str::private::Pattern::is_suffix_of","value":"fn (&self, &str) -> bool","parent":{"krate":0,"index":3481},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3485},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":351382,"byte_end":351391,"line_start":121,"line_end":121,"column_start":12,"column_end":21},"name":"fold_with","qualname":"::str::private::Pattern::fold_with","value":"fn <'ch, F> (&self, &'ch str, folder: F, skip_last: bool) -> F","parent":{"krate":0,"index":3481},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4747},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":352932,"byte_end":352937,"line_start":187,"line_end":187,"column_start":12,"column_end":17},"name":"Chars","qualname":"::str::Chars","value":"Chars {  }","parent":null,"children":[{"krate":0,"index":4749}],"decl_id":null,"docs":" Parallel iterator over the characters of a string\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4756},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":354003,"byte_end":354008,"line_start":231,"line_end":231,"column_start":12,"column_end":17},"name":"Split","qualname":"::str::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":4759},{"krate":0,"index":4760}],"decl_id":null,"docs":" Parallel iterator over substrings separated by a pattern\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4769},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":355717,"byte_end":355732,"line_start":294,"line_end":294,"column_start":12,"column_end":27},"name":"SplitTerminator","qualname":"::str::SplitTerminator","value":"SplitTerminator {  }","parent":null,"children":[{"krate":0,"index":4772},{"krate":0,"index":4773}],"decl_id":null,"docs":" Parallel iterator over substrings separated by a terminator pattern\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4782},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":357651,"byte_end":357656,"line_start":362,"line_end":362,"column_start":12,"column_end":17},"name":"Lines","qualname":"::str::Lines","value":"","parent":null,"children":[],"decl_id":null,"docs":" Parallel iterator over lines in a string\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4792},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":358302,"byte_end":358317,"line_start":386,"line_end":386,"column_start":12,"column_end":27},"name":"SplitWhitespace","qualname":"::str::SplitWhitespace","value":"","parent":null,"children":[],"decl_id":null,"docs":" Parallel iterator over substrings separated by whitespace\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3580},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\vec.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vec","qualname":"::vec","value":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\vec.rs","parent":null,"children":[{"krate":0,"index":3581},{"krate":0,"index":3582},{"krate":0,"index":3583},{"krate":0,"index":4802},{"krate":0,"index":4808},{"krate":0,"index":4805},{"krate":0,"index":3584},{"krate":0,"index":3589},{"krate":0,"index":3595},{"krate":0,"index":3602},{"krate":0,"index":3606},{"krate":0,"index":3613},{"krate":0,"index":3617},{"krate":0,"index":3621},{"krate":0,"index":3628},{"krate":0,"index":3633},{"krate":0,"index":3637}],"decl_id":null,"docs":" This module contains the parallel iterator types for vectors\n (`Vec<T>`). You will rarely need to interact with it directly\n unless you have need to name one of those types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4802},"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\vec.rs","byte_start":358999,"byte_end":359007,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::vec::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":4804}],"decl_id":null,"docs":" Parallel iterator that moves out of a vector.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\split_producer.rs","byte_start":8384,"byte_end":8397,"line_start":27,"line_end":27,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\split_producer.rs","byte_start":9819,"byte_end":9832,"line_start":71,"line_end":71,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\binary_heap.rs","byte_start":12845,"byte_end":12855,"line_start":18,"line_end":18,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\binary_heap.rs","byte_start":13296,"byte_end":13300,"line_start":39,"line_end":39,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\btree_map.rs","byte_start":14466,"byte_end":14470,"line_start":35,"line_end":35,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\btree_set.rs","byte_start":15950,"byte_end":15954,"line_start":35,"line_end":35,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\hash_map.rs","byte_start":17184,"byte_end":17188,"line_start":36,"line_end":36,"column_start":50,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\hash_set.rs","byte_start":18803,"byte_end":18807,"line_start":36,"line_end":36,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\linked_list.rs","byte_start":19874,"byte_end":19878,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\vec_deque.rs","byte_start":21244,"byte_end":21248,"line_start":36,"line_end":36,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\find.rs","byte_start":72327,"byte_end":72339,"line_start":19,"line_end":19,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\find.rs","byte_start":72542,"byte_end":72554,"line_start":28,"line_end":28,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\find.rs","byte_start":73145,"byte_end":73157,"line_start":54,"line_end":54,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\find.rs","byte_start":73527,"byte_end":73537,"line_start":74,"line_end":74,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\find.rs","byte_start":74012,"byte_end":74023,"line_start":99,"line_end":99,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\find_first_last\\mod.rs","byte_start":76545,"byte_end":76557,"line_start":67,"line_end":67,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\find_first_last\\mod.rs","byte_start":77144,"byte_end":77156,"line_start":86,"line_end":86,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\find_first_last\\mod.rs","byte_start":78152,"byte_end":78164,"line_start":118,"line_end":118,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\find_first_last\\mod.rs","byte_start":79710,"byte_end":79720,"line_start":160,"line_end":160,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\find_first_last\\mod.rs","byte_start":81490,"byte_end":81501,"line_start":213,"line_end":213,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\chain.rs","byte_start":82610,"byte_end":82615,"line_start":32,"line_end":32,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\chain.rs","byte_start":83823,"byte_end":83828,"line_start":66,"line_end":66,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\chain.rs","byte_start":84938,"byte_end":84947,"line_start":102,"line_end":102,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\chain.rs","byte_start":85741,"byte_end":85750,"line_start":125,"line_end":125,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\chain.rs","byte_start":86409,"byte_end":86422,"line_start":153,"line_end":153,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\chain.rs","byte_start":86668,"byte_end":86681,"line_start":166,"line_end":166,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\chain.rs","byte_start":88212,"byte_end":88220,"line_start":218,"line_end":218,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\chain.rs","byte_start":88435,"byte_end":88443,"line_start":227,"line_end":227,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\chain.rs","byte_start":88744,"byte_end":88752,"line_start":242,"line_end":242,"column_start":34,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\chain.rs","byte_start":88878,"byte_end":88886,"line_start":248,"line_end":248,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\collect\\consumer.rs","byte_start":95002,"byte_end":95017,"line_start":25,"line_end":25,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\collect\\consumer.rs","byte_start":95370,"byte_end":95385,"line_start":36,"line_end":36,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\collect\\consumer.rs","byte_start":96366,"byte_end":96379,"line_start":66,"line_end":66,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\collect\\consumer.rs","byte_start":97261,"byte_end":97276,"line_start":95,"line_end":95,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\collect\\mod.rs","byte_start":91492,"byte_end":91499,"line_start":75,"line_end":75,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\collect\\mod.rs","byte_start":93154,"byte_end":93157,"line_start":119,"line_end":119,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\enumerate.rs","byte_start":104031,"byte_end":104040,"line_start":27,"line_end":27,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\enumerate.rs","byte_start":104382,"byte_end":104391,"line_start":43,"line_end":43,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\enumerate.rs","byte_start":104905,"byte_end":104913,"line_start":63,"line_end":63,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\enumerate.rs","byte_start":105538,"byte_end":105555,"line_start":88,"line_end":88,"column_start":22,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\filter.rs","byte_start":107316,"byte_end":107322,"line_start":18,"line_end":18,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\filter.rs","byte_start":107787,"byte_end":107793,"line_start":38,"line_end":38,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":517},{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\filter.rs","byte_start":108341,"byte_end":108355,"line_start":60,"line_end":60,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\filter.rs","byte_start":108556,"byte_end":108570,"line_start":69,"line_end":69,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\filter.rs","byte_start":109291,"byte_end":109305,"line_start":97,"line_end":97,"column_start":48,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\filter.rs","byte_start":109697,"byte_end":109709,"line_start":115,"line_end":115,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\filter_map.rs","byte_start":110852,"byte_end":110861,"line_start":18,"line_end":18,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\filter_map.rs","byte_start":111341,"byte_end":111350,"line_start":38,"line_end":38,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\filter_map.rs","byte_start":111923,"byte_end":111940,"line_start":61,"line_end":61,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\filter_map.rs","byte_start":112143,"byte_end":112160,"line_start":70,"line_end":70,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\filter_map.rs","byte_start":112928,"byte_end":112945,"line_start":98,"line_end":98,"column_start":47,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\filter_map.rs","byte_start":113355,"byte_end":113370,"line_start":116,"line_end":116,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\flat_map.rs","byte_start":114539,"byte_end":114546,"line_start":18,"line_end":18,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\flat_map.rs","byte_start":115010,"byte_end":115017,"line_start":38,"line_end":38,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\flat_map.rs","byte_start":115638,"byte_end":115653,"line_start":64,"line_end":64,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\flat_map.rs","byte_start":115845,"byte_end":115860,"line_start":73,"line_end":73,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\flat_map.rs","byte_start":116634,"byte_end":116649,"line_start":102,"line_end":102,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":682},{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\flat_map.rs","byte_start":117105,"byte_end":117118,"line_start":123,"line_end":123,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\flatten.rs","byte_start":118987,"byte_end":118994,"line_start":28,"line_end":28,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\from_par_iter.rs","byte_start":119938,"byte_end":119941,"line_start":22,"line_end":22,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\from_par_iter.rs","byte_start":120204,"byte_end":120212,"line_start":33,"line_end":33,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\from_par_iter.rs","byte_start":120562,"byte_end":120572,"line_start":45,"line_end":45,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\from_par_iter.rs","byte_start":120875,"byte_end":120885,"line_start":57,"line_end":57,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\from_par_iter.rs","byte_start":121342,"byte_end":121349,"line_start":71,"line_end":71,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\from_par_iter.rs","byte_start":121889,"byte_end":121897,"line_start":87,"line_end":87,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\from_par_iter.rs","byte_start":122196,"byte_end":122203,"line_start":99,"line_end":99,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\from_par_iter.rs","byte_start":122525,"byte_end":122533,"line_start":111,"line_end":111,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\from_par_iter.rs","byte_start":122805,"byte_end":122811,"line_start":122,"line_end":122,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\from_par_iter.rs","byte_start":123067,"byte_end":123073,"line_start":131,"line_end":131,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\from_par_iter.rs","byte_start":123335,"byte_end":123341,"line_start":140,"line_end":140,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\from_par_iter.rs","byte_start":123599,"byte_end":123605,"line_start":149,"line_end":149,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\from_par_iter.rs","byte_start":124037,"byte_end":124040,"line_start":162,"line_end":162,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":129204,"byte_end":129212,"line_start":141,"line_end":141,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":842},{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":130325,"byte_end":130339,"line_start":180,"line_end":180,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":845},{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":132248,"byte_end":132256,"line_start":233,"line_end":233,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":857},{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\for_each.rs","byte_start":135948,"byte_end":135963,"line_start":18,"line_end":18,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\for_each.rs","byte_start":136358,"byte_end":136373,"line_start":38,"line_end":38,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\for_each.rs","byte_start":136635,"byte_end":136650,"line_start":55,"line_end":55,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":910},{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\fold.rs","byte_start":137725,"byte_end":137729,"line_start":32,"line_end":32,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\fold.rs","byte_start":137941,"byte_end":137945,"line_start":40,"line_end":40,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":933},{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\fold.rs","byte_start":138574,"byte_end":138586,"line_start":66,"line_end":66,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\fold.rs","byte_start":139368,"byte_end":139380,"line_start":94,"line_end":94,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":964},{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\fold.rs","byte_start":139838,"byte_end":139848,"line_start":115,"line_end":115,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\fold.rs","byte_start":141202,"byte_end":141210,"line_start":166,"line_end":166,"column_start":58,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\fold.rs","byte_start":141460,"byte_end":141468,"line_start":175,"line_end":175,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":997},{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\fold.rs","byte_start":142046,"byte_end":142062,"line_start":200,"line_end":200,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\fold.rs","byte_start":142849,"byte_end":142865,"line_start":228,"line_end":228,"column_start":47,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1026},{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\reduce.rs","byte_start":143709,"byte_end":143723,"line_start":22,"line_end":22,"column_start":26,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\reduce.rs","byte_start":143765,"byte_end":143779,"line_start":24,"line_end":24,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\reduce.rs","byte_start":143881,"byte_end":143895,"line_start":30,"line_end":30,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\reduce.rs","byte_start":144433,"byte_end":144447,"line_start":55,"line_end":55,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1070},{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\reduce.rs","byte_start":144707,"byte_end":144721,"line_start":69,"line_end":69,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\reduce.rs","byte_start":144965,"byte_end":144977,"line_start":82,"line_end":82,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1092},{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\skip.rs","byte_start":146331,"byte_end":146335,"line_start":28,"line_end":28,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\skip.rs","byte_start":146668,"byte_end":146672,"line_start":44,"line_end":44,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\skip.rs","byte_start":147354,"byte_end":147362,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1121},{"krate":0,"index":1122}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\splitter.rs","byte_start":148479,"byte_end":148484,"line_start":28,"line_end":28,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\splitter.rs","byte_start":148686,"byte_end":148691,"line_start":36,"line_end":36,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1141},{"krate":0,"index":1142}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\splitter.rs","byte_start":149183,"byte_end":149196,"line_start":58,"line_end":58,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1157}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\take.rs","byte_start":150551,"byte_end":150555,"line_start":27,"line_end":27,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\take.rs","byte_start":150888,"byte_end":150892,"line_start":43,"line_end":43,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\take.rs","byte_start":151556,"byte_end":151564,"line_start":67,"line_end":67,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1188},{"krate":0,"index":1189}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map.rs","byte_start":152481,"byte_end":152484,"line_start":21,"line_end":21,"column_start":48,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map.rs","byte_start":152931,"byte_end":152934,"line_start":41,"line_end":41,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1213}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map.rs","byte_start":153418,"byte_end":153421,"line_start":60,"line_end":60,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1218},{"krate":0,"index":1220},{"krate":0,"index":1221}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map.rs","byte_start":154271,"byte_end":154279,"line_start":89,"line_end":89,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1233},{"krate":0,"index":1234}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map.rs","byte_start":154958,"byte_end":154969,"line_start":116,"line_end":116,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map.rs","byte_start":155871,"byte_end":155882,"line_start":157,"line_end":157,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1263}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map.rs","byte_start":156070,"byte_end":156081,"line_start":166,"line_end":166,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map.rs","byte_start":156784,"byte_end":156795,"line_start":192,"line_end":192,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1282},{"krate":0,"index":1283}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map.rs","byte_start":157201,"byte_end":157210,"line_start":211,"line_end":211,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map_with.rs","byte_start":158253,"byte_end":158260,"line_start":21,"line_end":21,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1311}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map_with.rs","byte_start":158803,"byte_end":158810,"line_start":43,"line_end":43,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map_with.rs","byte_start":159342,"byte_end":159349,"line_start":63,"line_end":63,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1330},{"krate":0,"index":1332},{"krate":0,"index":1333}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map_with.rs","byte_start":160339,"byte_end":160347,"line_start":95,"line_end":95,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1348},{"krate":0,"index":1349}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map_with.rs","byte_start":161136,"byte_end":161151,"line_start":125,"line_end":125,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map_with.rs","byte_start":162180,"byte_end":162191,"line_start":170,"line_end":170,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map_with.rs","byte_start":162595,"byte_end":162606,"line_start":187,"line_end":187,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1395}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map_with.rs","byte_start":162920,"byte_end":162931,"line_start":198,"line_end":198,"column_start":44,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map_with.rs","byte_start":163288,"byte_end":163303,"line_start":216,"line_end":216,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1416}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map_with.rs","byte_start":163534,"byte_end":163549,"line_start":226,"line_end":226,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map_with.rs","byte_start":164381,"byte_end":164396,"line_start":256,"line_end":256,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1437},{"krate":0,"index":1438}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map_with.rs","byte_start":164877,"byte_end":164890,"line_start":277,"line_end":277,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1459},{"krate":0,"index":1460}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\zip.rs","byte_start":166514,"byte_end":166517,"line_start":29,"line_end":29,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1476}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\zip.rs","byte_start":166905,"byte_end":166908,"line_start":46,"line_end":46,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1480},{"krate":0,"index":1482},{"krate":0,"index":1483}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\zip.rs","byte_start":167665,"byte_end":167674,"line_start":73,"line_end":73,"column_start":58,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1494},{"krate":0,"index":1495}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\zip.rs","byte_start":168391,"byte_end":168400,"line_start":94,"line_end":94,"column_start":58,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1506},{"krate":0,"index":1507}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\zip.rs","byte_start":169115,"byte_end":169126,"line_start":120,"line_end":120,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\zip_eq.rs","byte_start":170788,"byte_end":170793,"line_start":30,"line_end":30,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\zip_eq.rs","byte_start":171189,"byte_end":171194,"line_start":47,"line_end":47,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1540},{"krate":0,"index":1542},{"krate":0,"index":1543}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\interleave.rs","byte_start":172616,"byte_end":172626,"line_start":32,"line_end":32,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\interleave.rs","byte_start":173007,"byte_end":173017,"line_start":49,"line_end":49,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1564},{"krate":0,"index":1566},{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\interleave.rs","byte_start":173978,"byte_end":173987,"line_start":86,"line_end":86,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1580},{"krate":0,"index":1581}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\interleave.rs","byte_start":174791,"byte_end":174800,"line_start":113,"line_end":113,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1594},{"krate":0,"index":1595}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\interleave.rs","byte_start":175455,"byte_end":175473,"line_start":140,"line_end":140,"column_start":12,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1608}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\interleave.rs","byte_start":175757,"byte_end":175775,"line_start":149,"line_end":149,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1615},{"krate":0,"index":1616},{"krate":0,"index":1617}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\interleave.rs","byte_start":178608,"byte_end":178621,"line_start":243,"line_end":243,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1628},{"krate":0,"index":1629},{"krate":0,"index":1630}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\interleave.rs","byte_start":179755,"byte_end":179768,"line_start":281,"line_end":281,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1634}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\interleave.rs","byte_start":180334,"byte_end":180347,"line_start":301,"line_end":301,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1638}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\interleave_shortest.rs","byte_start":181944,"byte_end":181962,"line_start":43,"line_end":43,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1652}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\interleave_shortest.rs","byte_start":182343,"byte_end":182361,"line_start":60,"line_end":60,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1656},{"krate":0,"index":1658},{"krate":0,"index":1659}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\intersperse.rs","byte_start":183747,"byte_end":183758,"line_start":32,"line_end":32,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1674}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\intersperse.rs","byte_start":184329,"byte_end":184340,"line_start":54,"line_end":54,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1677},{"krate":0,"index":1679},{"krate":0,"index":1680}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\intersperse.rs","byte_start":185389,"byte_end":185397,"line_start":90,"line_end":90,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1691},{"krate":0,"index":1692}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\intersperse.rs","byte_start":185948,"byte_end":185967,"line_start":116,"line_end":116,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1702}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\intersperse.rs","byte_start":186224,"byte_end":186243,"line_start":129,"line_end":129,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1709},{"krate":0,"index":1710}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\intersperse.rs","byte_start":188134,"byte_end":188149,"line_start":195,"line_end":195,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1721}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\intersperse.rs","byte_start":188926,"byte_end":188941,"line_start":223,"line_end":223,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1724}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\intersperse.rs","byte_start":189594,"byte_end":189609,"line_start":244,"line_end":244,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1727}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\intersperse.rs","byte_start":189987,"byte_end":190006,"line_start":263,"line_end":263,"column_start":12,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1737}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\intersperse.rs","byte_start":190242,"byte_end":190261,"line_start":275,"line_end":275,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1741},{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\intersperse.rs","byte_start":191344,"byte_end":191363,"line_start":311,"line_end":311,"column_start":37,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1750},{"krate":0,"index":1751}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\intersperse.rs","byte_start":191908,"byte_end":191925,"line_start":336,"line_end":336,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1761},{"krate":0,"index":1762},{"krate":0,"index":1763},{"krate":0,"index":1764}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\noop.rs","byte_start":192541,"byte_end":192553,"line_start":5,"line_end":5,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1771}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\noop.rs","byte_start":192637,"byte_end":192649,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":1778},{"krate":0,"index":1779}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\noop.rs","byte_start":192993,"byte_end":193005,"line_start":29,"line_end":29,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1784},{"krate":0,"index":1785}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\noop.rs","byte_start":193203,"byte_end":193215,"line_start":43,"line_end":43,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1788},{"krate":0,"index":1789}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\noop.rs","byte_start":193402,"byte_end":193413,"line_start":55,"line_end":55,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1793}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\rev.rs","byte_start":194185,"byte_end":194188,"line_start":25,"line_end":25,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1805}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\rev.rs","byte_start":194521,"byte_end":194524,"line_start":41,"line_end":41,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1808},{"krate":0,"index":1810},{"krate":0,"index":1811}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\rev.rs","byte_start":195237,"byte_end":195245,"line_start":66,"line_end":66,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1820},{"krate":0,"index":1821}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\rev.rs","byte_start":195744,"byte_end":195755,"line_start":88,"line_end":88,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1829},{"krate":0,"index":1830},{"krate":0,"index":1831},{"krate":0,"index":1832},{"krate":0,"index":1833},{"krate":0,"index":1834}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\len.rs","byte_start":197207,"byte_end":197213,"line_start":29,"line_end":29,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1844},{"krate":0,"index":1845},{"krate":0,"index":1847}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\len.rs","byte_start":197546,"byte_end":197552,"line_start":45,"line_end":45,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1850},{"krate":0,"index":1852},{"krate":0,"index":1853}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\len.rs","byte_start":198231,"byte_end":198239,"line_start":69,"line_end":69,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1862},{"krate":0,"index":1863}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\len.rs","byte_start":198858,"byte_end":198872,"line_start":94,"line_end":94,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1876}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\len.rs","byte_start":200266,"byte_end":200272,"line_start":150,"line_end":150,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1881},{"krate":0,"index":1882},{"krate":0,"index":1884}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\len.rs","byte_start":200605,"byte_end":200611,"line_start":166,"line_end":166,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1887},{"krate":0,"index":1889},{"krate":0,"index":1890}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\len.rs","byte_start":201290,"byte_end":201298,"line_start":190,"line_end":190,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1899},{"krate":0,"index":1900}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\len.rs","byte_start":201917,"byte_end":201931,"line_start":215,"line_end":215,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1908},{"krate":0,"index":1909},{"krate":0,"index":1910},{"krate":0,"index":1911},{"krate":0,"index":1912},{"krate":0,"index":1913}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\sum.rs","byte_start":203016,"byte_end":203027,"line_start":24,"line_end":24,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\sum.rs","byte_start":203049,"byte_end":203060,"line_start":26,"line_end":26,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1936}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\sum.rs","byte_start":203180,"byte_end":203191,"line_start":32,"line_end":32,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1940},{"krate":0,"index":1941},{"krate":0,"index":1942},{"krate":0,"index":1943},{"krate":0,"index":1944},{"krate":0,"index":1945}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\sum.rs","byte_start":203636,"byte_end":203647,"line_start":52,"line_end":52,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1949},{"krate":0,"index":1950}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\sum.rs","byte_start":203862,"byte_end":203873,"line_start":64,"line_end":64,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1953}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\sum.rs","byte_start":204046,"byte_end":204055,"line_start":77,"line_end":77,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1960},{"krate":0,"index":1961},{"krate":0,"index":1962},{"krate":0,"index":1964},{"krate":0,"index":1965}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\product.rs","byte_start":204983,"byte_end":204998,"line_start":24,"line_end":24,"column_start":31,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\product.rs","byte_start":205020,"byte_end":205035,"line_start":26,"line_end":26,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1985}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\product.rs","byte_start":205163,"byte_end":205178,"line_start":32,"line_end":32,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1989},{"krate":0,"index":1990},{"krate":0,"index":1991},{"krate":0,"index":1992},{"krate":0,"index":1993},{"krate":0,"index":1994}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\product.rs","byte_start":205659,"byte_end":205674,"line_start":52,"line_end":52,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1998},{"krate":0,"index":1999}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\product.rs","byte_start":205905,"byte_end":205920,"line_start":64,"line_end":64,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2002}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\product.rs","byte_start":206105,"byte_end":206118,"line_start":77,"line_end":77,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2011},{"krate":0,"index":2013},{"krate":0,"index":2014}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\cloned.rs","byte_start":207322,"byte_end":207328,"line_start":27,"line_end":27,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2025},{"krate":0,"index":2026},{"krate":0,"index":2028}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\cloned.rs","byte_start":207780,"byte_end":207786,"line_start":45,"line_end":45,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2033},{"krate":0,"index":2035},{"krate":0,"index":2036}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\cloned.rs","byte_start":208440,"byte_end":208448,"line_start":69,"line_end":69,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2045},{"krate":0,"index":2046}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\cloned.rs","byte_start":208995,"byte_end":209009,"line_start":91,"line_end":91,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\cloned.rs","byte_start":209716,"byte_end":209730,"line_start":124,"line_end":124,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2066}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\cloned.rs","byte_start":209848,"byte_end":209862,"line_start":130,"line_end":130,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2071},{"krate":0,"index":2072},{"krate":0,"index":2073},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2076}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\cloned.rs","byte_start":210447,"byte_end":210461,"line_start":152,"line_end":152,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2081},{"krate":0,"index":2082}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\cloned.rs","byte_start":210787,"byte_end":210799,"line_start":170,"line_end":170,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":2093}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\inspect.rs","byte_start":211747,"byte_end":211754,"line_start":22,"line_end":22,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2105}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\inspect.rs","byte_start":212226,"byte_end":212233,"line_start":42,"line_end":42,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":2115}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\inspect.rs","byte_start":212697,"byte_end":212704,"line_start":60,"line_end":60,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2119},{"krate":0,"index":2121},{"krate":0,"index":2122}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\inspect.rs","byte_start":213553,"byte_end":213561,"line_start":89,"line_end":89,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2133},{"krate":0,"index":2134}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\inspect.rs","byte_start":214226,"byte_end":214241,"line_start":115,"line_end":115,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2146},{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":2149},{"krate":0,"index":2150},{"krate":0,"index":2151}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\inspect.rs","byte_start":215163,"byte_end":215178,"line_start":156,"line_end":156,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2162}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\inspect.rs","byte_start":215379,"byte_end":215394,"line_start":165,"line_end":165,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2170},{"krate":0,"index":2171},{"krate":0,"index":2172},{"krate":0,"index":2173}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\inspect.rs","byte_start":216113,"byte_end":216128,"line_start":192,"line_end":192,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2179},{"krate":0,"index":2180}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\inspect.rs","byte_start":216516,"byte_end":216529,"line_start":210,"line_end":210,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2194},{"krate":0,"index":2195}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\while_some.rs","byte_start":217773,"byte_end":217782,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2208},{"krate":0,"index":2209}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\while_some.rs","byte_start":218413,"byte_end":218430,"line_start":54,"line_end":54,"column_start":40,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2225}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\while_some.rs","byte_start":219162,"byte_end":219179,"line_start":81,"line_end":81,"column_start":49,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":2230},{"krate":0,"index":2231}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\while_some.rs","byte_start":219555,"byte_end":219570,"line_start":99,"line_end":99,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":2244}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":221347,"byte_end":221357,"line_start":45,"line_end":45,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2276}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":221672,"byte_end":221682,"line_start":56,"line_end":56,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2282}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":222013,"byte_end":222021,"line_start":68,"line_end":68,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2288}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":222347,"byte_end":222355,"line_start":80,"line_end":80,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2295}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":222691,"byte_end":222699,"line_start":93,"line_end":93,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2300}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":222986,"byte_end":222994,"line_start":104,"line_end":104,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2306}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":223299,"byte_end":223306,"line_start":116,"line_end":116,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2313}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":223782,"byte_end":223789,"line_start":130,"line_end":130,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2321}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":224193,"byte_end":224200,"line_start":144,"line_end":144,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2327}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":224555,"byte_end":224562,"line_start":156,"line_end":156,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2334}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":224926,"byte_end":224936,"line_start":169,"line_end":169,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2339}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":225539,"byte_end":225549,"line_start":191,"line_end":191,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2346}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":225856,"byte_end":225862,"line_start":203,"line_end":203,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2349}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":226536,"byte_end":226542,"line_start":223,"line_end":223,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2354}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":226821,"byte_end":226827,"line_start":232,"line_end":232,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2358}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":227113,"byte_end":227119,"line_start":241,"line_end":241,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2362}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":227400,"byte_end":227408,"line_start":251,"line_end":251,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2367}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":227713,"byte_end":227721,"line_start":262,"line_end":262,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2373}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":228153,"byte_end":228156,"line_start":277,"line_end":277,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2379}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\unzip.rs","byte_start":231164,"byte_end":231169,"line_start":86,"line_end":86,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2414},{"krate":0,"index":2415},{"krate":0,"index":2416},{"krate":0,"index":2419}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\unzip.rs","byte_start":232098,"byte_end":232107,"line_start":121,"line_end":121,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2431},{"krate":0,"index":2432},{"krate":0,"index":2433}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\unzip.rs","byte_start":233212,"byte_end":233224,"line_start":161,"line_end":161,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2451},{"krate":0,"index":2452},{"krate":0,"index":2453}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\unzip.rs","byte_start":233872,"byte_end":233878,"line_start":188,"line_end":188,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":2472}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\unzip.rs","byte_start":235316,"byte_end":235322,"line_start":237,"line_end":237,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2487},{"krate":0,"index":2488},{"krate":0,"index":2490}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\unzip.rs","byte_start":236274,"byte_end":236287,"line_start":276,"line_end":276,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":2507},{"krate":0,"index":2508},{"krate":0,"index":2509},{"krate":0,"index":2510}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\unzip.rs","byte_start":237499,"byte_end":237512,"line_start":319,"line_end":319,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2517},{"krate":0,"index":2518}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\unzip.rs","byte_start":238192,"byte_end":238203,"line_start":348,"line_end":348,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2535},{"krate":0,"index":2536}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\unzip.rs","byte_start":238969,"byte_end":238981,"line_start":381,"line_end":381,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2547}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\repeat.rs","byte_start":240010,"byte_end":240016,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2557},{"krate":0,"index":2558}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\repeat.rs","byte_start":240869,"byte_end":240875,"line_start":55,"line_end":55,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2562},{"krate":0,"index":2563}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\repeat.rs","byte_start":241298,"byte_end":241312,"line_start":73,"line_end":73,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2570},{"krate":0,"index":2571},{"krate":0,"index":2572}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\repeat.rs","byte_start":242254,"byte_end":242261,"line_start":111,"line_end":111,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2578},{"krate":0,"index":2579},{"krate":0,"index":2581}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\repeat.rs","byte_start":242577,"byte_end":242584,"line_start":127,"line_end":127,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2584},{"krate":0,"index":2586},{"krate":0,"index":2588}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\repeat.rs","byte_start":243157,"byte_end":243172,"line_start":154,"line_end":154,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2595},{"krate":0,"index":2596},{"krate":0,"index":2597},{"krate":0,"index":2598}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\repeat.rs","byte_start":243820,"byte_end":243824,"line_start":177,"line_end":177,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2605},{"krate":0,"index":2606},{"krate":0,"index":2607}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\repeat.rs","byte_start":244202,"byte_end":244206,"line_start":196,"line_end":196,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2610}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\repeat.rs","byte_start":244335,"byte_end":244339,"line_start":203,"line_end":203,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2613}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\empty.rs","byte_start":245142,"byte_end":245147,"line_start":34,"line_end":34,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2633}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\empty.rs","byte_start":245237,"byte_end":245242,"line_start":40,"line_end":40,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2636}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\empty.rs","byte_start":245374,"byte_end":245379,"line_start":46,"line_end":46,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2639},{"krate":0,"index":2640},{"krate":0,"index":2642}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\empty.rs","byte_start":245664,"byte_end":245669,"line_start":60,"line_end":60,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2645},{"krate":0,"index":2647},{"krate":0,"index":2648}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\empty.rs","byte_start":246143,"byte_end":246156,"line_start":81,"line_end":81,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2656},{"krate":0,"index":2657},{"krate":0,"index":2658},{"krate":0,"index":2659}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\once.rs","byte_start":247350,"byte_end":247354,"line_start":34,"line_end":34,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2670},{"krate":0,"index":2671},{"krate":0,"index":2673}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\once.rs","byte_start":247639,"byte_end":247643,"line_start":48,"line_end":48,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2676},{"krate":0,"index":2678},{"krate":0,"index":2679}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":26276,"byte_end":26277,"line_start":133,"line_end":133,"column_start":67,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":2696},{"krate":0,"index":2697},{"krate":0,"index":2698}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":27340,"byte_end":27341,"line_start":165,"line_end":165,"column_start":70,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":2707},{"krate":0,"index":2708},{"krate":0,"index":2709}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":57915,"byte_end":57916,"line_start":944,"line_end":944,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2822},{"krate":0,"index":2823},{"krate":0,"index":2824}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\option.rs","byte_start":248530,"byte_end":248536,"line_start":17,"line_end":17,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2901},{"krate":0,"index":2902},{"krate":0,"index":2903}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\option.rs","byte_start":248709,"byte_end":248717,"line_start":26,"line_end":26,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2906},{"krate":0,"index":2907},{"krate":0,"index":2909}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\option.rs","byte_start":249011,"byte_end":249019,"line_start":40,"line_end":40,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2912},{"krate":0,"index":2914},{"krate":0,"index":2915}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\option.rs","byte_start":249772,"byte_end":249776,"line_start":72,"line_end":72,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2920}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\option.rs","byte_start":250764,"byte_end":250778,"line_start":119,"line_end":119,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2938},{"krate":0,"index":2939},{"krate":0,"index":2940},{"krate":0,"index":2941}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\option.rs","byte_start":251395,"byte_end":251401,"line_start":143,"line_end":143,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2946}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\range.rs","byte_start":253875,"byte_end":253880,"line_start":46,"line_end":46,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2966},{"krate":0,"index":2967},{"krate":0,"index":2968}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\range.rs","byte_start":254156,"byte_end":254168,"line_start":61,"line_end":61,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2974},{"krate":0,"index":2975},{"krate":0,"index":2976}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\result.rs","byte_start":258644,"byte_end":258650,"line_start":17,"line_end":17,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2987},{"krate":0,"index":2988},{"krate":0,"index":2989}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\result.rs","byte_start":259068,"byte_end":259072,"line_start":38,"line_end":38,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2993}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\result.rs","byte_start":260271,"byte_end":260277,"line_start":85,"line_end":85,"column_start":58,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3013}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mergesort.rs","byte_start":287703,"byte_end":287713,"line_start":33,"line_end":33,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3036}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mergesort.rs","byte_start":290634,"byte_end":290640,"line_start":101,"line_end":101,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3045}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mergesort.rs","byte_start":290889,"byte_end":290902,"line_start":113,"line_end":113,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3052}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mergesort.rs","byte_start":294678,"byte_end":294687,"line_start":216,"line_end":216,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3063}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mergesort.rs","byte_start":306116,"byte_end":306121,"line_start":514,"line_end":514,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3087}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\quicksort.rs","byte_start":315349,"byte_end":315360,"line_start":22,"line_end":22,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3110}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\quicksort.rs","byte_start":315590,"byte_end":315596,"line_start":35,"line_end":35,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3116}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\quicksort.rs","byte_start":315803,"byte_end":315813,"line_start":47,"line_end":47,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3123}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":274576,"byte_end":274580,"line_start":385,"line_end":385,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3255}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":274707,"byte_end":274711,"line_start":391,"line_end":391,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3259},{"krate":0,"index":3260},{"krate":0,"index":3262}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":275036,"byte_end":275040,"line_start":405,"line_end":405,"column_start":58,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3266},{"krate":0,"index":3268},{"krate":0,"index":3269}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":275545,"byte_end":275557,"line_start":427,"line_end":427,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3278},{"krate":0,"index":3279},{"krate":0,"index":3280},{"krate":0,"index":3281}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":276130,"byte_end":276136,"line_start":449,"line_end":449,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3285}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":276265,"byte_end":276271,"line_start":455,"line_end":455,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3289},{"krate":0,"index":3290},{"krate":0,"index":3292}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":276598,"byte_end":276604,"line_start":469,"line_end":469,"column_start":58,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3296},{"krate":0,"index":3298},{"krate":0,"index":3299}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":277296,"byte_end":277310,"line_start":495,"line_end":495,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3309},{"krate":0,"index":3310},{"krate":0,"index":3311},{"krate":0,"index":3312}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":278096,"byte_end":278103,"line_start":525,"line_end":525,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3316}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":278233,"byte_end":278240,"line_start":531,"line_end":531,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3320},{"krate":0,"index":3321},{"krate":0,"index":3323}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":278567,"byte_end":278574,"line_start":545,"line_end":545,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3327},{"krate":0,"index":3329},{"krate":0,"index":3330}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":279304,"byte_end":279319,"line_start":572,"line_end":572,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3340},{"krate":0,"index":3341},{"krate":0,"index":3342},{"krate":0,"index":3343}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":280159,"byte_end":280166,"line_start":602,"line_end":602,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3347},{"krate":0,"index":3348},{"krate":0,"index":3350}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":280495,"byte_end":280502,"line_start":616,"line_end":616,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3354},{"krate":0,"index":3356},{"krate":0,"index":3357}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":281017,"byte_end":281032,"line_start":638,"line_end":638,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3366},{"krate":0,"index":3367},{"krate":0,"index":3368},{"krate":0,"index":3369}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":281646,"byte_end":281655,"line_start":660,"line_end":660,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3373},{"krate":0,"index":3374},{"krate":0,"index":3376}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":281986,"byte_end":281995,"line_start":674,"line_end":674,"column_start":58,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3380},{"krate":0,"index":3382},{"krate":0,"index":3383}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":282697,"byte_end":282714,"line_start":700,"line_end":700,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3393},{"krate":0,"index":3394},{"krate":0,"index":3395},{"krate":0,"index":3396}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":283487,"byte_end":283492,"line_start":729,"line_end":729,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3407}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":283643,"byte_end":283648,"line_start":735,"line_end":735,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3412}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":283866,"byte_end":283871,"line_start":743,"line_end":743,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3417},{"krate":0,"index":3418}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":285366,"byte_end":285374,"line_start":801,"line_end":801,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3441}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":285595,"byte_end":285603,"line_start":809,"line_end":809,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3446},{"krate":0,"index":3447}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":352204,"byte_end":352206,"line_start":156,"line_end":156,"column_start":54,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4746},{"krate":0,"index":3498},{"krate":0,"index":3499},{"krate":0,"index":3500},{"krate":0,"index":3501}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":353052,"byte_end":353057,"line_start":195,"line_end":195,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3509},{"krate":0,"index":3510}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":353312,"byte_end":353325,"line_start":205,"line_end":205,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3514},{"krate":0,"index":3515},{"krate":0,"index":3516}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Inherent","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":354092,"byte_end":354097,"line_start":236,"line_end":236,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3521}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":354298,"byte_end":354303,"line_start":245,"line_end":245,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3525},{"krate":0,"index":3526}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Inherent","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":355952,"byte_end":355967,"line_start":304,"line_end":304,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3547}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":356173,"byte_end":356196,"line_start":313,"line_end":313,"column_start":36,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3552}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":356504,"byte_end":356519,"line_start":322,"line_end":322,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3556},{"krate":0,"index":3557}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":356862,"byte_end":356885,"line_start":333,"line_end":333,"column_start":58,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":3563},{"krate":0,"index":3564},{"krate":0,"index":3566}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":357705,"byte_end":357710,"line_start":364,"line_end":364,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3570},{"krate":0,"index":3571}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":358366,"byte_end":358381,"line_start":388,"line_end":388,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3576},{"krate":0,"index":3577}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\vec.rs","byte_start":359078,"byte_end":359081,"line_start":15,"line_end":15,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3586},{"krate":0,"index":3587},{"krate":0,"index":3588}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\vec.rs","byte_start":359254,"byte_end":359262,"line_start":24,"line_end":24,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3591},{"krate":0,"index":3592},{"krate":0,"index":3594}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\vec.rs","byte_start":359558,"byte_end":359566,"line_start":38,"line_end":38,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3597},{"krate":0,"index":3599},{"krate":0,"index":3600}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\vec.rs","byte_start":360690,"byte_end":360701,"line_start":74,"line_end":74,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3609},{"krate":0,"index":3610},{"krate":0,"index":3611},{"krate":0,"index":3612}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\vec.rs","byte_start":361344,"byte_end":361355,"line_start":92,"line_end":92,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3616}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\vec.rs","byte_start":361703,"byte_end":361713,"line_start":105,"line_end":105,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3624},{"krate":0,"index":3625},{"krate":0,"index":3627}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\vec.rs","byte_start":362020,"byte_end":362030,"line_start":118,"line_end":118,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3631}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\vec.rs","byte_start":362220,"byte_end":362230,"line_start":124,"line_end":124,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3636}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\vec.rs","byte_start":362336,"byte_end":362346,"line_start":130,"line_end":130,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3640}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\par_either.rs","byte_start":362708,"byte_end":362714,"line_start":6,"line_end":6,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3650},{"krate":0,"index":3651},{"krate":0,"index":3653}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\par_either.rs","byte_start":363238,"byte_end":363244,"line_start":26,"line_end":26,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3657},{"krate":0,"index":3659},{"krate":0,"index":3660}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\par_either.rs","byte_start":364038,"byte_end":364044,"line_start":55,"line_end":55,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3666}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","byte_start":4078,"byte_end":4089,"line_start":113,"line_end":113,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":59}},{"kind":"Mod","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\mod.rs","byte_start":12259,"byte_end":12270,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":61}},{"kind":"Mod","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\mod.rs","byte_start":12280,"byte_end":12289,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":75}},{"kind":"Mod","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\mod.rs","byte_start":12299,"byte_end":12308,"line_start":23,"line_end":23,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":85}},{"kind":"Mod","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\mod.rs","byte_start":12318,"byte_end":12326,"line_start":24,"line_end":24,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":94}},{"kind":"Mod","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\mod.rs","byte_start":12336,"byte_end":12344,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":107}},{"kind":"Mod","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\mod.rs","byte_start":12354,"byte_end":12365,"line_start":26,"line_end":26,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":119}},{"kind":"Mod","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\mod.rs","byte_start":12375,"byte_end":12384,"line_start":27,"line_end":27,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":128}},{"kind":"Mod","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","byte_start":4099,"byte_end":4103,"line_start":114,"line_end":114,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":150}},{"kind":"Mod","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":23852,"byte_end":23860,"line_start":45,"line_end":45,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":794}},{"kind":"Mod","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","byte_start":4113,"byte_end":4119,"line_start":115,"line_end":115,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2892}},{"kind":"Mod","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","byte_start":4129,"byte_end":4136,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":2949}},{"kind":"Mod","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","byte_start":4146,"byte_end":4151,"line_start":117,"line_end":117,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2960}},{"kind":"Mod","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","byte_start":4161,"byte_end":4167,"line_start":118,"line_end":118,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2979}},{"kind":"Mod","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","byte_start":4177,"byte_end":4182,"line_start":119,"line_end":119,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3016}},{"kind":"Mod","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","byte_start":4192,"byte_end":4195,"line_start":120,"line_end":120,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":3460}},{"kind":"Mod","span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\lib.rs","byte_start":4205,"byte_end":4208,"line_start":121,"line_end":121,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":3580}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\split_producer.rs","byte_start":7965,"byte_end":7970,"line_start":17,"line_end":17,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":33}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\split_producer.rs","byte_start":8384,"byte_end":8397,"line_start":27,"line_end":27,"column_start":16,"column_end":29},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":26},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\split_producer.rs","byte_start":9819,"byte_end":9832,"line_start":71,"line_end":71,"column_start":38,"column_end":51},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":26},"to":{"krate":0,"index":836}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\binary_heap.rs","byte_start":12845,"byte_end":12855,"line_start":18,"line_end":18,"column_start":46,"column_end":56},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":320},"to":{"krate":0,"index":2684}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\binary_heap.rs","byte_start":13296,"byte_end":13300,"line_start":39,"line_end":39,"column_start":35,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3702},"to":{"krate":2,"index":2179}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\btree_map.rs","byte_start":14466,"byte_end":14470,"line_start":35,"line_end":35,"column_start":44,"column_end":48},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3754},"to":{"krate":2,"index":2179}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\btree_set.rs","byte_start":15950,"byte_end":15954,"line_start":35,"line_end":35,"column_start":40,"column_end":44},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3824},"to":{"krate":2,"index":2179}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\hash_map.rs","byte_start":17184,"byte_end":17188,"line_start":36,"line_end":36,"column_start":50,"column_end":54},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3869},"to":{"krate":2,"index":2179}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\hash_set.rs","byte_start":18803,"byte_end":18807,"line_start":36,"line_end":36,"column_start":41,"column_end":45},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":3942},"to":{"krate":2,"index":2179}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\linked_list.rs","byte_start":19874,"byte_end":19878,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":3986},"to":{"krate":2,"index":2179}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\collections\\vec_deque.rs","byte_start":21244,"byte_end":21248,"line_start":36,"line_end":36,"column_start":29,"column_end":33},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":4058},"to":{"krate":2,"index":2179}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\find.rs","byte_start":72327,"byte_end":72339,"line_start":19,"line_end":19,"column_start":13,"column_end":25},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\find.rs","byte_start":72542,"byte_end":72554,"line_start":28,"line_end":28,"column_start":36,"column_end":48},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":169},"to":{"krate":0,"index":813}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\find.rs","byte_start":73145,"byte_end":73157,"line_start":54,"line_end":54,"column_start":45,"column_end":57},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":169},"to":{"krate":0,"index":832}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\find.rs","byte_start":73527,"byte_end":73537,"line_start":74,"line_end":74,"column_start":30,"column_end":40},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":194},"to":{"krate":0,"index":821}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\find.rs","byte_start":74012,"byte_end":74023,"line_start":99,"line_end":99,"column_start":32,"column_end":43},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":209},"to":{"krate":0,"index":829}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\find_first_last\\mod.rs","byte_start":76545,"byte_end":76557,"line_start":67,"line_end":67,"column_start":13,"column_end":25},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\find_first_last\\mod.rs","byte_start":77144,"byte_end":77156,"line_start":86,"line_end":86,"column_start":32,"column_end":44},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":228},"to":{"krate":0,"index":813}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\find_first_last\\mod.rs","byte_start":78152,"byte_end":78164,"line_start":118,"line_end":118,"column_start":41,"column_end":53},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":228},"to":{"krate":0,"index":832}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\find_first_last\\mod.rs","byte_start":79710,"byte_end":79720,"line_start":160,"line_end":160,"column_start":51,"column_end":61},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":257},"to":{"krate":0,"index":821}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\find_first_last\\mod.rs","byte_start":81490,"byte_end":81501,"line_start":213,"line_end":213,"column_start":32,"column_end":43},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":274},"to":{"krate":0,"index":829}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\chain.rs","byte_start":82610,"byte_end":82615,"line_start":32,"line_end":32,"column_start":33,"column_end":38},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":4112},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\chain.rs","byte_start":83823,"byte_end":83828,"line_start":66,"line_end":66,"column_start":40,"column_end":45},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":4112},"to":{"krate":0,"index":2825}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\chain.rs","byte_start":84938,"byte_end":84947,"line_start":102,"line_end":102,"column_start":51,"column_end":60},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":307},"to":{"krate":0,"index":799}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\chain.rs","byte_start":85741,"byte_end":85750,"line_start":125,"line_end":125,"column_start":51,"column_end":60},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":319},"to":{"krate":0,"index":799}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\chain.rs","byte_start":86409,"byte_end":86422,"line_start":153,"line_end":153,"column_start":12,"column_end":25},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\chain.rs","byte_start":86668,"byte_end":86681,"line_start":166,"line_end":166,"column_start":25,"column_end":38},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":331},"to":{"krate":0,"index":804}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\chain.rs","byte_start":88212,"byte_end":88220,"line_start":218,"line_end":218,"column_start":12,"column_end":20},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\chain.rs","byte_start":88435,"byte_end":88443,"line_start":227,"line_end":227,"column_start":25,"column_end":33},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":352},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\chain.rs","byte_start":88744,"byte_end":88752,"line_start":242,"line_end":242,"column_start":34,"column_end":42},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":352},"to":{"krate":2,"index":3796}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\chain.rs","byte_start":88878,"byte_end":88886,"line_start":248,"line_end":248,"column_start":36,"column_end":44},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":352},"to":{"krate":2,"index":3767}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\collect\\consumer.rs","byte_start":95002,"byte_end":95017,"line_start":25,"line_end":25,"column_start":24,"column_end":39},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\collect\\consumer.rs","byte_start":95370,"byte_end":95385,"line_start":36,"line_end":36,"column_start":40,"column_end":55},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":393},"to":{"krate":0,"index":813}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\collect\\consumer.rs","byte_start":96366,"byte_end":96379,"line_start":66,"line_end":66,"column_start":38,"column_end":51},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":398},"to":{"krate":0,"index":821}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\collect\\consumer.rs","byte_start":97261,"byte_end":97276,"line_start":95,"line_end":95,"column_start":49,"column_end":64},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":393},"to":{"krate":0,"index":832}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\collect\\mod.rs","byte_start":91492,"byte_end":91499,"line_start":75,"line_end":75,"column_start":24,"column_end":31},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\collect\\mod.rs","byte_start":93154,"byte_end":93157,"line_start":119,"line_end":119,"column_start":31,"column_end":34},"kind":{"Impl":{"id":64}},"from":{"krate":5,"index":3763},"to":{"krate":0,"index":2888}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\enumerate.rs","byte_start":104031,"byte_end":104040,"line_start":27,"line_end":27,"column_start":30,"column_end":39},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":4125},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\enumerate.rs","byte_start":104382,"byte_end":104391,"line_start":43,"line_end":43,"column_start":37,"column_end":46},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":4125},"to":{"krate":0,"index":2825}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\enumerate.rs","byte_start":104905,"byte_end":104913,"line_start":63,"line_end":63,"column_start":45,"column_end":53},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":479},"to":{"krate":0,"index":799}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\enumerate.rs","byte_start":105538,"byte_end":105555,"line_start":88,"line_end":88,"column_start":22,"column_end":39},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":488},"to":{"krate":0,"index":804}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\filter.rs","byte_start":107316,"byte_end":107322,"line_start":18,"line_end":18,"column_start":48,"column_end":54},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":4134},"to":{"krate":2,"index":7486}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\filter.rs","byte_start":107787,"byte_end":107793,"line_start":38,"line_end":38,"column_start":33,"column_end":39},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":4134},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\filter.rs","byte_start":108341,"byte_end":108355,"line_start":60,"line_end":60,"column_start":16,"column_end":30},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\filter.rs","byte_start":108556,"byte_end":108570,"line_start":69,"line_end":69,"column_start":39,"column_end":53},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":520},"to":{"krate":0,"index":813}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\filter.rs","byte_start":109291,"byte_end":109305,"line_start":97,"line_end":97,"column_start":48,"column_end":62},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":520},"to":{"krate":0,"index":832}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\filter.rs","byte_start":109697,"byte_end":109709,"line_start":115,"line_end":115,"column_start":33,"column_end":45},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":549},"to":{"krate":0,"index":821}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\filter_map.rs","byte_start":110852,"byte_end":110861,"line_start":18,"line_end":18,"column_start":48,"column_end":57},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":4143},"to":{"krate":2,"index":7486}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\filter_map.rs","byte_start":111341,"byte_end":111350,"line_start":38,"line_end":38,"column_start":36,"column_end":45},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":4143},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\filter_map.rs","byte_start":111923,"byte_end":111940,"line_start":61,"line_end":61,"column_start":20,"column_end":37},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\filter_map.rs","byte_start":112143,"byte_end":112160,"line_start":70,"line_end":70,"column_start":38,"column_end":55},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":585},"to":{"krate":0,"index":813}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\filter_map.rs","byte_start":112928,"byte_end":112945,"line_start":98,"line_end":98,"column_start":47,"column_end":64},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":585},"to":{"krate":0,"index":832}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\filter_map.rs","byte_start":113355,"byte_end":113370,"line_start":116,"line_end":116,"column_start":36,"column_end":51},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":616},"to":{"krate":0,"index":821}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\flat_map.rs","byte_start":114539,"byte_end":114546,"line_start":18,"line_end":18,"column_start":48,"column_end":55},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":4152},"to":{"krate":2,"index":7486}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\flat_map.rs","byte_start":115010,"byte_end":115017,"line_start":38,"line_end":38,"column_start":37,"column_end":44},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":4152},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\flat_map.rs","byte_start":115638,"byte_end":115653,"line_start":64,"line_end":64,"column_start":16,"column_end":31},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":653},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\flat_map.rs","byte_start":115845,"byte_end":115860,"line_start":73,"line_end":73,"column_start":38,"column_end":53},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":653},"to":{"krate":0,"index":813}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\flat_map.rs","byte_start":116634,"byte_end":116649,"line_start":102,"line_end":102,"column_start":47,"column_end":62},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":653},"to":{"krate":0,"index":832}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\flat_map.rs","byte_start":117105,"byte_end":117118,"line_start":123,"line_end":123,"column_start":36,"column_end":49},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":684},"to":{"krate":0,"index":821}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\flatten.rs","byte_start":118987,"byte_end":118994,"line_start":28,"line_end":28,"column_start":34,"column_end":41},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":4161},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\from_par_iter.rs","byte_start":119938,"byte_end":119941,"line_start":22,"line_end":22,"column_start":37,"column_end":40},"kind":{"Impl":{"id":88}},"from":{"krate":5,"index":3763},"to":{"krate":0,"index":2884}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\from_par_iter.rs","byte_start":120204,"byte_end":120212,"line_start":33,"line_end":33,"column_start":37,"column_end":45},"kind":{"Impl":{"id":89}},"from":{"krate":5,"index":2037},"to":{"krate":0,"index":2884}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\from_par_iter.rs","byte_start":120562,"byte_end":120572,"line_start":45,"line_end":45,"column_start":37,"column_end":47},"kind":{"Impl":{"id":90}},"from":{"krate":5,"index":320},"to":{"krate":0,"index":2884}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\from_par_iter.rs","byte_start":120875,"byte_end":120885,"line_start":57,"line_end":57,"column_start":37,"column_end":47},"kind":{"Impl":{"id":91}},"from":{"krate":5,"index":1769},"to":{"krate":0,"index":2884}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\from_par_iter.rs","byte_start":121342,"byte_end":121349,"line_start":71,"line_end":71,"column_start":48,"column_end":55},"kind":{"Impl":{"id":92}},"from":{"krate":1,"index":6104},"to":{"krate":0,"index":2884}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\from_par_iter.rs","byte_start":121889,"byte_end":121897,"line_start":87,"line_end":87,"column_start":45,"column_end":53},"kind":{"Impl":{"id":93}},"from":{"krate":5,"index":967},"to":{"krate":0,"index":2884}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\from_par_iter.rs","byte_start":122196,"byte_end":122203,"line_start":99,"line_end":99,"column_start":40,"column_end":47},"kind":{"Impl":{"id":94}},"from":{"krate":1,"index":6130},"to":{"krate":0,"index":2884}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\from_par_iter.rs","byte_start":122525,"byte_end":122533,"line_start":111,"line_end":111,"column_start":37,"column_end":45},"kind":{"Impl":{"id":95}},"from":{"krate":5,"index":4211},"to":{"krate":0,"index":2884}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\from_par_iter.rs","byte_start":122805,"byte_end":122811,"line_start":122,"line_end":122,"column_start":37,"column_end":43},"kind":{"Impl":{"id":96}},"from":{"krate":5,"index":4325},"to":{"krate":0,"index":2884}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\from_par_iter.rs","byte_start":123067,"byte_end":123073,"line_start":131,"line_end":131,"column_start":45,"column_end":51},"kind":{"Impl":{"id":97}},"from":{"krate":5,"index":4325},"to":{"krate":0,"index":2884}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\from_par_iter.rs","byte_start":123335,"byte_end":123341,"line_start":140,"line_end":140,"column_start":44,"column_end":50},"kind":{"Impl":{"id":98}},"from":{"krate":5,"index":4325},"to":{"krate":0,"index":2884}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\from_par_iter.rs","byte_start":123599,"byte_end":123605,"line_start":149,"line_end":149,"column_start":39,"column_end":45},"kind":{"Impl":{"id":99}},"from":{"krate":5,"index":4325},"to":{"krate":0,"index":2884}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\from_par_iter.rs","byte_start":124037,"byte_end":124040,"line_start":162,"line_end":162,"column_start":52,"column_end":55},"kind":{"Impl":{"id":100}},"from":{"krate":5,"index":3096},"to":{"krate":0,"index":2884}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":124909,"byte_end":124913,"line_start":20,"line_end":20,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":1534},"to":{"krate":0,"index":804}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":124916,"byte_end":124921,"line_start":20,"line_end":20,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":804}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":126076,"byte_end":126080,"line_start":53,"line_end":53,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1534},"to":{"krate":0,"index":813}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":126083,"byte_end":126088,"line_start":53,"line_end":53,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":813}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":126849,"byte_end":126854,"line_start":73,"line_end":73,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":821}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":127826,"byte_end":127834,"line_start":107,"line_end":107,"column_start":33,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":813},"to":{"krate":0,"index":832}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":128268,"byte_end":128272,"line_start":117,"line_end":117,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1534},"to":{"krate":0,"index":836}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":128275,"byte_end":128280,"line_start":117,"line_end":117,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":836}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":129204,"byte_end":129212,"line_start":141,"line_end":141,"column_start":6,"column_end":14},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":4170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":130325,"byte_end":130339,"line_start":180,"line_end":180,"column_start":6,"column_end":20},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":4175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\plumbing.rs","byte_start":132248,"byte_end":132256,"line_start":233,"line_end":233,"column_start":40,"column_end":48},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":850},"to":{"krate":0,"index":799}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\for_each.rs","byte_start":135948,"byte_end":135963,"line_start":18,"line_end":18,"column_start":32,"column_end":47},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":884},"to":{"krate":0,"index":813}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\for_each.rs","byte_start":136358,"byte_end":136373,"line_start":38,"line_end":38,"column_start":30,"column_end":45},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":884},"to":{"krate":0,"index":821}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\for_each.rs","byte_start":136635,"byte_end":136650,"line_start":55,"line_end":55,"column_start":41,"column_end":56},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":884},"to":{"krate":0,"index":832}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\fold.rs","byte_start":137725,"byte_end":137729,"line_start":32,"line_end":32,"column_start":52,"column_end":56},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":4181},"to":{"krate":2,"index":7486}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\fold.rs","byte_start":137941,"byte_end":137945,"line_start":40,"line_end":40,"column_start":40,"column_end":44},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":4181},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\fold.rs","byte_start":138574,"byte_end":138586,"line_start":66,"line_end":66,"column_start":42,"column_end":54},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":936},"to":{"krate":0,"index":813}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\fold.rs","byte_start":139368,"byte_end":139380,"line_start":94,"line_end":94,"column_start":51,"column_end":63},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":936},"to":{"krate":0,"index":832}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\fold.rs","byte_start":139838,"byte_end":139848,"line_start":115,"line_end":115,"column_start":37,"column_end":47},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":966},"to":{"krate":0,"index":821}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\fold.rs","byte_start":141202,"byte_end":141210,"line_start":166,"line_end":166,"column_start":58,"column_end":66},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":4193},"to":{"krate":2,"index":7486}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\fold.rs","byte_start":141460,"byte_end":141468,"line_start":175,"line_end":175,"column_start":36,"column_end":44},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":4193},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\fold.rs","byte_start":142046,"byte_end":142062,"line_start":200,"line_end":200,"column_start":38,"column_end":54},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1000},"to":{"krate":0,"index":813}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\fold.rs","byte_start":142849,"byte_end":142865,"line_start":228,"line_end":228,"column_start":47,"column_end":63},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1000},"to":{"krate":0,"index":832}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\reduce.rs","byte_start":143709,"byte_end":143723,"line_start":22,"line_end":22,"column_start":26,"column_end":40},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1039},"to":{"krate":2,"index":1542}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\reduce.rs","byte_start":143765,"byte_end":143779,"line_start":24,"line_end":24,"column_start":27,"column_end":41},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1039},"to":{"krate":2,"index":2179}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\reduce.rs","byte_start":143881,"byte_end":143895,"line_start":30,"line_end":30,"column_start":36,"column_end":50},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1039},"to":{"krate":0,"index":813}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\reduce.rs","byte_start":144433,"byte_end":144447,"line_start":55,"line_end":55,"column_start":45,"column_end":59},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1039},"to":{"krate":0,"index":832}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\reduce.rs","byte_start":144707,"byte_end":144721,"line_start":69,"line_end":69,"column_start":35,"column_end":49},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1039},"to":{"krate":0,"index":829}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\reduce.rs","byte_start":144965,"byte_end":144977,"line_start":82,"line_end":82,"column_start":30,"column_end":42},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1078},"to":{"krate":0,"index":821}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\skip.rs","byte_start":146331,"byte_end":146335,"line_start":28,"line_end":28,"column_start":30,"column_end":34},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":4205},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\skip.rs","byte_start":146668,"byte_end":146672,"line_start":44,"line_end":44,"column_start":37,"column_end":41},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":4205},"to":{"krate":0,"index":2825}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\skip.rs","byte_start":147354,"byte_end":147362,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1114},"to":{"krate":0,"index":799}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\splitter.rs","byte_start":148479,"byte_end":148484,"line_start":28,"line_end":28,"column_start":29,"column_end":34},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":4215},"to":{"krate":2,"index":7486}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\splitter.rs","byte_start":148686,"byte_end":148691,"line_start":36,"line_end":36,"column_start":33,"column_end":38},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":4215},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\splitter.rs","byte_start":149183,"byte_end":149196,"line_start":58,"line_end":58,"column_start":38,"column_end":51},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1144},"to":{"krate":0,"index":836}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\take.rs","byte_start":150551,"byte_end":150555,"line_start":27,"line_end":27,"column_start":30,"column_end":34},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":4224},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\take.rs","byte_start":150888,"byte_end":150892,"line_start":43,"line_end":43,"column_start":37,"column_end":41},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":4224},"to":{"krate":0,"index":2825}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\take.rs","byte_start":151556,"byte_end":151564,"line_start":67,"line_end":67,"column_start":45,"column_end":53},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1181},"to":{"krate":0,"index":799}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map.rs","byte_start":152481,"byte_end":152484,"line_start":21,"line_end":21,"column_start":48,"column_end":51},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":4234},"to":{"krate":2,"index":7486}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map.rs","byte_start":152931,"byte_end":152934,"line_start":41,"line_end":41,"column_start":36,"column_end":39},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":4234},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map.rs","byte_start":153418,"byte_end":153421,"line_start":60,"line_end":60,"column_start":43,"column_end":46},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":4234},"to":{"krate":0,"index":2825}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map.rs","byte_start":154271,"byte_end":154279,"line_start":89,"line_end":89,"column_start":51,"column_end":59},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1223},"to":{"krate":0,"index":799}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map.rs","byte_start":154958,"byte_end":154969,"line_start":116,"line_end":116,"column_start":32,"column_end":43},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1236},"to":{"krate":0,"index":804}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map.rs","byte_start":155871,"byte_end":155882,"line_start":157,"line_end":157,"column_start":16,"column_end":27},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map.rs","byte_start":156070,"byte_end":156081,"line_start":166,"line_end":166,"column_start":38,"column_end":49},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1253},"to":{"krate":0,"index":813}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map.rs","byte_start":156784,"byte_end":156795,"line_start":192,"line_end":192,"column_start":47,"column_end":58},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1253},"to":{"krate":0,"index":832}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map.rs","byte_start":157201,"byte_end":157210,"line_start":211,"line_end":211,"column_start":36,"column_end":45},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1284},"to":{"krate":0,"index":821}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map_with.rs","byte_start":158253,"byte_end":158260,"line_start":21,"line_end":21,"column_start":58,"column_end":65},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":4243},"to":{"krate":2,"index":7486}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map_with.rs","byte_start":158803,"byte_end":158810,"line_start":43,"line_end":43,"column_start":39,"column_end":46},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":4243},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map_with.rs","byte_start":159342,"byte_end":159349,"line_start":63,"line_end":63,"column_start":46,"column_end":53},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":4243},"to":{"krate":0,"index":2825}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map_with.rs","byte_start":160339,"byte_end":160347,"line_start":95,"line_end":95,"column_start":54,"column_end":62},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1335},"to":{"krate":0,"index":799}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map_with.rs","byte_start":161136,"byte_end":161151,"line_start":125,"line_end":125,"column_start":35,"column_end":50},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1351},"to":{"krate":0,"index":804}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map_with.rs","byte_start":162180,"byte_end":162191,"line_start":170,"line_end":170,"column_start":35,"column_end":46},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1371},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map_with.rs","byte_start":162595,"byte_end":162606,"line_start":187,"line_end":187,"column_start":46,"column_end":57},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1371},"to":{"krate":2,"index":3767}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map_with.rs","byte_start":162920,"byte_end":162931,"line_start":198,"line_end":198,"column_start":44,"column_end":55},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1371},"to":{"krate":2,"index":3796}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map_with.rs","byte_start":163288,"byte_end":163303,"line_start":216,"line_end":216,"column_start":19,"column_end":34},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1403},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map_with.rs","byte_start":163534,"byte_end":163549,"line_start":226,"line_end":226,"column_start":41,"column_end":56},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1403},"to":{"krate":0,"index":813}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map_with.rs","byte_start":164381,"byte_end":164396,"line_start":256,"line_end":256,"column_start":50,"column_end":65},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1403},"to":{"krate":0,"index":832}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\map_with.rs","byte_start":164877,"byte_end":164890,"line_start":277,"line_end":277,"column_start":39,"column_end":52},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1439},"to":{"krate":0,"index":821}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\zip.rs","byte_start":166514,"byte_end":166517,"line_start":29,"line_end":29,"column_start":33,"column_end":36},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":4255},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\zip.rs","byte_start":166905,"byte_end":166908,"line_start":46,"line_end":46,"column_start":40,"column_end":43},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":4255},"to":{"krate":0,"index":2825}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\zip.rs","byte_start":167665,"byte_end":167674,"line_start":73,"line_end":73,"column_start":58,"column_end":67},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1485},"to":{"krate":0,"index":799}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\zip.rs","byte_start":168391,"byte_end":168400,"line_start":94,"line_end":94,"column_start":58,"column_end":67},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1497},"to":{"krate":0,"index":799}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\zip.rs","byte_start":169115,"byte_end":169126,"line_start":120,"line_end":120,"column_start":45,"column_end":56},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1509},"to":{"krate":0,"index":804}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\zip_eq.rs","byte_start":170788,"byte_end":170793,"line_start":30,"line_end":30,"column_start":33,"column_end":38},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":4268},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\zip_eq.rs","byte_start":171189,"byte_end":171194,"line_start":47,"line_end":47,"column_start":40,"column_end":45},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":4268},"to":{"krate":0,"index":2825}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\interleave.rs","byte_start":172616,"byte_end":172626,"line_start":32,"line_end":32,"column_start":33,"column_end":43},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":4280},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\interleave.rs","byte_start":173007,"byte_end":173017,"line_start":49,"line_end":49,"column_start":40,"column_end":50},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":4280},"to":{"krate":0,"index":2825}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\interleave.rs","byte_start":173978,"byte_end":173987,"line_start":86,"line_end":86,"column_start":51,"column_end":60},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1569},"to":{"krate":0,"index":799}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\interleave.rs","byte_start":174791,"byte_end":174800,"line_start":113,"line_end":113,"column_start":51,"column_end":60},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1583},"to":{"krate":0,"index":799}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\interleave.rs","byte_start":175455,"byte_end":175473,"line_start":140,"line_end":140,"column_start":12,"column_end":30},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\interleave.rs","byte_start":175757,"byte_end":175775,"line_start":149,"line_end":149,"column_start":25,"column_end":43},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1597},"to":{"krate":0,"index":804}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\interleave.rs","byte_start":178608,"byte_end":178621,"line_start":243,"line_end":243,"column_start":25,"column_end":38},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1619},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\interleave.rs","byte_start":179755,"byte_end":179768,"line_start":281,"line_end":281,"column_start":36,"column_end":49},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1619},"to":{"krate":2,"index":3767}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\interleave.rs","byte_start":180334,"byte_end":180347,"line_start":301,"line_end":301,"column_start":34,"column_end":47},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1619},"to":{"krate":2,"index":3796}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\interleave_shortest.rs","byte_start":181944,"byte_end":181962,"line_start":43,"line_end":43,"column_start":33,"column_end":51},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":4293},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\interleave_shortest.rs","byte_start":182343,"byte_end":182361,"line_start":60,"line_end":60,"column_start":40,"column_end":58},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":4293},"to":{"krate":0,"index":2825}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\intersperse.rs","byte_start":183747,"byte_end":183758,"line_start":32,"line_end":32,"column_start":30,"column_end":41},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":4305},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\intersperse.rs","byte_start":184329,"byte_end":184340,"line_start":54,"line_end":54,"column_start":37,"column_end":48},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":4305},"to":{"krate":0,"index":2825}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\intersperse.rs","byte_start":185389,"byte_end":185397,"line_start":90,"line_end":90,"column_start":45,"column_end":53},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1682},"to":{"krate":0,"index":799}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\intersperse.rs","byte_start":185948,"byte_end":185967,"line_start":116,"line_end":116,"column_start":9,"column_end":28},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\intersperse.rs","byte_start":186224,"byte_end":186243,"line_start":129,"line_end":129,"column_start":22,"column_end":41},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1694},"to":{"krate":0,"index":804}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\intersperse.rs","byte_start":188134,"byte_end":188149,"line_start":195,"line_end":195,"column_start":22,"column_end":37},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1711},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\intersperse.rs","byte_start":188926,"byte_end":188941,"line_start":223,"line_end":223,"column_start":33,"column_end":48},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1711},"to":{"krate":2,"index":3767}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\intersperse.rs","byte_start":189594,"byte_end":189609,"line_start":244,"line_end":244,"column_start":31,"column_end":46},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":1711},"to":{"krate":2,"index":3796}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\intersperse.rs","byte_start":189987,"byte_end":190006,"line_start":263,"line_end":263,"column_start":12,"column_end":31},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":1728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\intersperse.rs","byte_start":190242,"byte_end":190261,"line_start":275,"line_end":275,"column_start":28,"column_end":47},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1728},"to":{"krate":0,"index":813}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\intersperse.rs","byte_start":191344,"byte_end":191363,"line_start":311,"line_end":311,"column_start":37,"column_end":56},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":1728},"to":{"krate":0,"index":832}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\intersperse.rs","byte_start":191908,"byte_end":191925,"line_start":336,"line_end":336,"column_start":26,"column_end":43},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1752},"to":{"krate":0,"index":821}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\noop.rs","byte_start":192541,"byte_end":192553,"line_start":5,"line_end":5,"column_start":6,"column_end":18},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\noop.rs","byte_start":192637,"byte_end":192649,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1768},"to":{"krate":0,"index":813}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\noop.rs","byte_start":192993,"byte_end":193005,"line_start":29,"line_end":29,"column_start":23,"column_end":35},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1768},"to":{"krate":0,"index":821}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\noop.rs","byte_start":193203,"byte_end":193215,"line_start":43,"line_end":43,"column_start":34,"column_end":46},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1768},"to":{"krate":0,"index":832}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\noop.rs","byte_start":193402,"byte_end":193413,"line_start":55,"line_end":55,"column_start":22,"column_end":33},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1790},"to":{"krate":0,"index":829}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\rev.rs","byte_start":194185,"byte_end":194188,"line_start":25,"line_end":25,"column_start":30,"column_end":33},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":4315},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\rev.rs","byte_start":194521,"byte_end":194524,"line_start":41,"line_end":41,"column_start":37,"column_end":40},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":4315},"to":{"krate":0,"index":2825}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\rev.rs","byte_start":195237,"byte_end":195245,"line_start":66,"line_end":66,"column_start":45,"column_end":53},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":1813},"to":{"krate":0,"index":799}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\rev.rs","byte_start":195744,"byte_end":195755,"line_start":88,"line_end":88,"column_start":22,"column_end":33},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":1823},"to":{"krate":0,"index":804}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\len.rs","byte_start":197207,"byte_end":197213,"line_start":29,"line_end":29,"column_start":30,"column_end":36},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4324},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\len.rs","byte_start":197546,"byte_end":197552,"line_start":45,"line_end":45,"column_start":37,"column_end":43},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":4324},"to":{"krate":0,"index":2825}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\len.rs","byte_start":198231,"byte_end":198239,"line_start":69,"line_end":69,"column_start":45,"column_end":53},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1855},"to":{"krate":0,"index":799}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\len.rs","byte_start":198858,"byte_end":198872,"line_start":94,"line_end":94,"column_start":22,"column_end":36},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1865},"to":{"krate":0,"index":804}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\len.rs","byte_start":200266,"byte_end":200272,"line_start":150,"line_end":150,"column_start":30,"column_end":36},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":4334},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\len.rs","byte_start":200605,"byte_end":200611,"line_start":166,"line_end":166,"column_start":37,"column_end":43},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":4334},"to":{"krate":0,"index":2825}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\len.rs","byte_start":201290,"byte_end":201298,"line_start":190,"line_end":190,"column_start":45,"column_end":53},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":1892},"to":{"krate":0,"index":799}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\len.rs","byte_start":201917,"byte_end":201931,"line_start":215,"line_end":215,"column_start":22,"column_end":36},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":1902},"to":{"krate":0,"index":804}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\sum.rs","byte_start":203016,"byte_end":203027,"line_start":24,"line_end":24,"column_start":31,"column_end":42},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":1929},"to":{"krate":2,"index":1534}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\sum.rs","byte_start":203049,"byte_end":203060,"line_start":26,"line_end":26,"column_start":15,"column_end":26},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":1929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\sum.rs","byte_start":203180,"byte_end":203191,"line_start":32,"line_end":32,"column_start":28,"column_end":39},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":1929},"to":{"krate":0,"index":813}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\sum.rs","byte_start":203636,"byte_end":203647,"line_start":52,"line_end":52,"column_start":37,"column_end":48},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":1929},"to":{"krate":0,"index":832}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\sum.rs","byte_start":203862,"byte_end":203873,"line_start":64,"line_end":64,"column_start":24,"column_end":35},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":1929},"to":{"krate":0,"index":829}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\sum.rs","byte_start":204046,"byte_end":204055,"line_start":77,"line_end":77,"column_start":26,"column_end":35},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":1954},"to":{"krate":0,"index":821}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\product.rs","byte_start":204983,"byte_end":204998,"line_start":24,"line_end":24,"column_start":31,"column_end":46},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":1978},"to":{"krate":2,"index":1534}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\product.rs","byte_start":205020,"byte_end":205035,"line_start":26,"line_end":26,"column_start":15,"column_end":30},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":1978},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\product.rs","byte_start":205163,"byte_end":205178,"line_start":32,"line_end":32,"column_start":28,"column_end":43},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":1978},"to":{"krate":0,"index":813}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\product.rs","byte_start":205659,"byte_end":205674,"line_start":52,"line_end":52,"column_start":37,"column_end":52},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":1978},"to":{"krate":0,"index":832}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\product.rs","byte_start":205905,"byte_end":205920,"line_start":64,"line_end":64,"column_start":24,"column_end":39},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":1978},"to":{"krate":0,"index":829}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\product.rs","byte_start":206105,"byte_end":206118,"line_start":77,"line_end":77,"column_start":26,"column_end":39},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2003},"to":{"krate":0,"index":821}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\cloned.rs","byte_start":207322,"byte_end":207328,"line_start":27,"line_end":27,"column_start":37,"column_end":43},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":4344},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\cloned.rs","byte_start":207780,"byte_end":207786,"line_start":45,"line_end":45,"column_start":44,"column_end":50},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":4344},"to":{"krate":0,"index":2825}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\cloned.rs","byte_start":208440,"byte_end":208448,"line_start":69,"line_end":69,"column_start":53,"column_end":61},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2038},"to":{"krate":0,"index":799}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\cloned.rs","byte_start":208995,"byte_end":209009,"line_start":91,"line_end":91,"column_start":29,"column_end":43},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2048},"to":{"krate":0,"index":804}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\cloned.rs","byte_start":209716,"byte_end":209730,"line_start":124,"line_end":124,"column_start":9,"column_end":23},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":2061},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\cloned.rs","byte_start":209848,"byte_end":209862,"line_start":130,"line_end":130,"column_start":36,"column_end":50},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":2061},"to":{"krate":0,"index":813}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\cloned.rs","byte_start":210447,"byte_end":210461,"line_start":152,"line_end":152,"column_start":45,"column_end":59},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":2061},"to":{"krate":0,"index":832}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\cloned.rs","byte_start":210787,"byte_end":210799,"line_start":170,"line_end":170,"column_start":34,"column_end":46},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2083},"to":{"krate":0,"index":821}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\inspect.rs","byte_start":211747,"byte_end":211754,"line_start":22,"line_end":22,"column_start":48,"column_end":55},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":4353},"to":{"krate":2,"index":7486}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\inspect.rs","byte_start":212226,"byte_end":212233,"line_start":42,"line_end":42,"column_start":33,"column_end":40},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":4353},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\inspect.rs","byte_start":212697,"byte_end":212704,"line_start":60,"line_end":60,"column_start":40,"column_end":47},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":4353},"to":{"krate":0,"index":2825}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\inspect.rs","byte_start":213553,"byte_end":213561,"line_start":89,"line_end":89,"column_start":48,"column_end":56},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":2124},"to":{"krate":0,"index":799}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\inspect.rs","byte_start":214226,"byte_end":214241,"line_start":115,"line_end":115,"column_start":29,"column_end":44},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2136},"to":{"krate":0,"index":804}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\inspect.rs","byte_start":215163,"byte_end":215178,"line_start":156,"line_end":156,"column_start":16,"column_end":31},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\inspect.rs","byte_start":215379,"byte_end":215394,"line_start":165,"line_end":165,"column_start":35,"column_end":50},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":2152},"to":{"krate":0,"index":813}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\inspect.rs","byte_start":216113,"byte_end":216128,"line_start":192,"line_end":192,"column_start":44,"column_end":59},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2152},"to":{"krate":0,"index":832}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\inspect.rs","byte_start":216516,"byte_end":216529,"line_start":210,"line_end":210,"column_start":33,"column_end":46},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2181},"to":{"krate":0,"index":821}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\while_some.rs","byte_start":217773,"byte_end":217782,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":4362},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\while_some.rs","byte_start":218413,"byte_end":218430,"line_start":54,"line_end":54,"column_start":40,"column_end":57},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":2211},"to":{"krate":0,"index":813}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\while_some.rs","byte_start":219162,"byte_end":219179,"line_start":81,"line_end":81,"column_start":49,"column_end":66},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":2211},"to":{"krate":0,"index":832}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\while_some.rs","byte_start":219555,"byte_end":219570,"line_start":99,"line_end":99,"column_start":38,"column_end":53},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":2232},"to":{"krate":0,"index":821}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":221347,"byte_end":221357,"line_start":45,"line_end":45,"column_start":31,"column_end":41},"kind":{"Impl":{"id":232}},"from":{"krate":5,"index":320},"to":{"krate":0,"index":2888}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":221672,"byte_end":221682,"line_start":56,"line_end":56,"column_start":39,"column_end":49},"kind":{"Impl":{"id":233}},"from":{"krate":5,"index":320},"to":{"krate":0,"index":2888}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":222013,"byte_end":222021,"line_start":68,"line_end":68,"column_start":39,"column_end":47},"kind":{"Impl":{"id":234}},"from":{"krate":5,"index":967},"to":{"krate":0,"index":2888}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":222347,"byte_end":222355,"line_start":80,"line_end":80,"column_start":51,"column_end":59},"kind":{"Impl":{"id":235}},"from":{"krate":5,"index":967},"to":{"krate":0,"index":2888}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":222691,"byte_end":222699,"line_start":93,"line_end":93,"column_start":31,"column_end":39},"kind":{"Impl":{"id":236}},"from":{"krate":5,"index":4211},"to":{"krate":0,"index":2888}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":222986,"byte_end":222994,"line_start":104,"line_end":104,"column_start":39,"column_end":47},"kind":{"Impl":{"id":237}},"from":{"krate":5,"index":4211},"to":{"krate":0,"index":2888}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":223299,"byte_end":223306,"line_start":116,"line_end":116,"column_start":42,"column_end":49},"kind":{"Impl":{"id":238}},"from":{"krate":1,"index":6104},"to":{"krate":0,"index":2888}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":223782,"byte_end":223789,"line_start":130,"line_end":130,"column_start":54,"column_end":61},"kind":{"Impl":{"id":239}},"from":{"krate":1,"index":6104},"to":{"krate":0,"index":2888}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":224193,"byte_end":224200,"line_start":144,"line_end":144,"column_start":34,"column_end":41},"kind":{"Impl":{"id":240}},"from":{"krate":1,"index":6130},"to":{"krate":0,"index":2888}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":224555,"byte_end":224562,"line_start":156,"line_end":156,"column_start":42,"column_end":49},"kind":{"Impl":{"id":241}},"from":{"krate":1,"index":6130},"to":{"krate":0,"index":2888}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":224926,"byte_end":224936,"line_start":169,"line_end":169,"column_start":31,"column_end":41},"kind":{"Impl":{"id":242}},"from":{"krate":5,"index":1769},"to":{"krate":0,"index":2888}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":225539,"byte_end":225549,"line_start":191,"line_end":191,"column_start":39,"column_end":49},"kind":{"Impl":{"id":243}},"from":{"krate":5,"index":1769},"to":{"krate":0,"index":2888}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":225856,"byte_end":225862,"line_start":203,"line_end":203,"column_start":31,"column_end":37},"kind":{"Impl":{"id":244}},"from":{"krate":5,"index":4325},"to":{"krate":0,"index":2888}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":226536,"byte_end":226542,"line_start":223,"line_end":223,"column_start":39,"column_end":45},"kind":{"Impl":{"id":245}},"from":{"krate":5,"index":4325},"to":{"krate":0,"index":2888}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":226821,"byte_end":226827,"line_start":232,"line_end":232,"column_start":38,"column_end":44},"kind":{"Impl":{"id":246}},"from":{"krate":5,"index":4325},"to":{"krate":0,"index":2888}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":227113,"byte_end":227119,"line_start":241,"line_end":241,"column_start":33,"column_end":39},"kind":{"Impl":{"id":247}},"from":{"krate":5,"index":4325},"to":{"krate":0,"index":2888}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":227400,"byte_end":227408,"line_start":251,"line_end":251,"column_start":31,"column_end":39},"kind":{"Impl":{"id":248}},"from":{"krate":5,"index":2037},"to":{"krate":0,"index":2888}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":227713,"byte_end":227721,"line_start":262,"line_end":262,"column_start":39,"column_end":47},"kind":{"Impl":{"id":249}},"from":{"krate":5,"index":2037},"to":{"krate":0,"index":2888}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\extend.rs","byte_start":228153,"byte_end":228156,"line_start":277,"line_end":277,"column_start":39,"column_end":42},"kind":{"Impl":{"id":250}},"from":{"krate":5,"index":3763},"to":{"krate":0,"index":2888}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\unzip.rs","byte_start":228632,"byte_end":228636,"line_start":7,"line_end":7,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":1544},"to":{"krate":0,"index":2384}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\unzip.rs","byte_start":228639,"byte_end":228643,"line_start":7,"line_end":7,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1534},"to":{"krate":0,"index":2384}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\unzip.rs","byte_start":231164,"byte_end":231169,"line_start":86,"line_end":86,"column_start":44,"column_end":49},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":2409},"to":{"krate":0,"index":2384}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\unzip.rs","byte_start":232098,"byte_end":232107,"line_start":121,"line_end":121,"column_start":27,"column_end":36},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":2425},"to":{"krate":0,"index":2384}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\unzip.rs","byte_start":233212,"byte_end":233224,"line_start":161,"line_end":161,"column_start":33,"column_end":45},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":2443},"to":{"krate":0,"index":2384}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\unzip.rs","byte_start":233872,"byte_end":233878,"line_start":188,"line_end":188,"column_start":45,"column_end":51},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":2456},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\unzip.rs","byte_start":235316,"byte_end":235322,"line_start":237,"line_end":237,"column_start":42,"column_end":48},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":2473},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\unzip.rs","byte_start":236274,"byte_end":236287,"line_start":276,"line_end":276,"column_start":41,"column_end":54},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":2491},"to":{"krate":0,"index":813}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\unzip.rs","byte_start":237499,"byte_end":237512,"line_start":319,"line_end":319,"column_start":50,"column_end":63},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":2491},"to":{"krate":0,"index":832}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\unzip.rs","byte_start":238192,"byte_end":238203,"line_start":348,"line_end":348,"column_start":39,"column_end":50},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":2519},"to":{"krate":0,"index":821}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\unzip.rs","byte_start":238969,"byte_end":238981,"line_start":381,"line_end":381,"column_start":40,"column_end":52},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":2537},"to":{"krate":0,"index":829}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\repeat.rs","byte_start":240010,"byte_end":240016,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":4371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\repeat.rs","byte_start":240869,"byte_end":240875,"line_start":55,"line_end":55,"column_start":30,"column_end":36},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":4371},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\repeat.rs","byte_start":241298,"byte_end":241312,"line_start":73,"line_end":73,"column_start":45,"column_end":59},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":2565},"to":{"krate":0,"index":836}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\repeat.rs","byte_start":242254,"byte_end":242261,"line_start":111,"line_end":111,"column_start":30,"column_end":37},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":4380},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\repeat.rs","byte_start":242577,"byte_end":242584,"line_start":127,"line_end":127,"column_start":37,"column_end":44},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":4380},"to":{"krate":0,"index":2825}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\repeat.rs","byte_start":243157,"byte_end":243172,"line_start":154,"line_end":154,"column_start":36,"column_end":51},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":2589},"to":{"krate":0,"index":804}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\repeat.rs","byte_start":243820,"byte_end":243824,"line_start":177,"line_end":177,"column_start":29,"column_end":33},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":2599},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\repeat.rs","byte_start":244202,"byte_end":244206,"line_start":196,"line_end":196,"column_start":40,"column_end":44},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":2599},"to":{"krate":2,"index":3767}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\repeat.rs","byte_start":244335,"byte_end":244339,"line_start":203,"line_end":203,"column_start":38,"column_end":42},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":2599},"to":{"krate":2,"index":3796}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\empty.rs","byte_start":245142,"byte_end":245147,"line_start":34,"line_end":34,"column_start":25,"column_end":30},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":2628},"to":{"krate":2,"index":2179}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\empty.rs","byte_start":245237,"byte_end":245242,"line_start":40,"line_end":40,"column_start":30,"column_end":35},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":2628},"to":{"krate":2,"index":7486}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\empty.rs","byte_start":245374,"byte_end":245379,"line_start":46,"line_end":46,"column_start":36,"column_end":41},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":2628},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\empty.rs","byte_start":245664,"byte_end":245669,"line_start":60,"line_end":60,"column_start":43,"column_end":48},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":2628},"to":{"krate":0,"index":2825}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\empty.rs","byte_start":246143,"byte_end":246156,"line_start":81,"line_end":81,"column_start":28,"column_end":41},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":2650},"to":{"krate":0,"index":804}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\once.rs","byte_start":247350,"byte_end":247354,"line_start":34,"line_end":34,"column_start":36,"column_end":40},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":4390},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\once.rs","byte_start":247639,"byte_end":247643,"line_start":48,"line_end":48,"column_start":43,"column_end":47},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":4390},"to":{"krate":0,"index":2825}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":26276,"byte_end":26277,"line_start":133,"line_end":133,"column_start":67,"column_end":68},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":2695},"to":{"krate":0,"index":2688}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":27340,"byte_end":27341,"line_start":165,"line_end":165,"column_start":70,"column_end":71},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":2706},"to":{"krate":0,"index":2699}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":27671,"byte_end":27676,"line_start":177,"line_end":177,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":27679,"byte_end":27683,"line_start":177,"line_end":177,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":1534},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":57915,"byte_end":57916,"line_start":944,"line_end":944,"column_start":52,"column_end":53},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":2821},"to":{"krate":0,"index":2684}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\iter\\mod.rs","byte_start":58267,"byte_end":58283,"line_start":958,"line_end":958,"column_start":36,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":2710},"to":{"krate":0,"index":2825}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\option.rs","byte_start":248530,"byte_end":248536,"line_start":17,"line_end":17,"column_start":40,"column_end":46},"kind":{"Impl":{"id":279}},"from":{"krate":2,"index":29045},"to":{"krate":0,"index":2684}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\option.rs","byte_start":248709,"byte_end":248717,"line_start":26,"line_end":26,"column_start":36,"column_end":44},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":4399},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\option.rs","byte_start":249011,"byte_end":249019,"line_start":40,"line_end":40,"column_start":43,"column_end":51},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":4399},"to":{"krate":0,"index":2825}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\option.rs","byte_start":249772,"byte_end":249776,"line_start":72,"line_end":72,"column_start":29,"column_end":33},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":4408},"to":{"krate":2,"index":2179}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\option.rs","byte_start":250764,"byte_end":250778,"line_start":119,"line_end":119,"column_start":28,"column_end":42},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":2933},"to":{"krate":0,"index":804}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\option.rs","byte_start":251395,"byte_end":251401,"line_start":143,"line_end":143,"column_start":52,"column_end":58},"kind":{"Impl":{"id":288}},"from":{"krate":2,"index":29045},"to":{"krate":0,"index":2884}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\range.rs","byte_start":253875,"byte_end":253880,"line_start":46,"line_end":46,"column_start":34,"column_end":39},"kind":{"Impl":{"id":289}},"from":{"krate":2,"index":27052},"to":{"krate":0,"index":2684}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\range.rs","byte_start":254156,"byte_end":254168,"line_start":61,"line_end":61,"column_start":26,"column_end":38},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":2969},"to":{"krate":2,"index":3808}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\result.rs","byte_start":258644,"byte_end":258650,"line_start":17,"line_end":17,"column_start":43,"column_end":49},"kind":{"Impl":{"id":291}},"from":{"krate":2,"index":29136},"to":{"krate":0,"index":2684}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\result.rs","byte_start":259068,"byte_end":259072,"line_start":38,"line_end":38,"column_start":29,"column_end":33},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":4635},"to":{"krate":2,"index":2179}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\result.rs","byte_start":260271,"byte_end":260277,"line_start":85,"line_end":85,"column_start":58,"column_end":64},"kind":{"Impl":{"id":299}},"from":{"krate":2,"index":29136},"to":{"krate":0,"index":2884}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mergesort.rs","byte_start":287703,"byte_end":287713,"line_start":33,"line_end":33,"column_start":18,"column_end":28},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":3029},"to":{"krate":2,"index":1725}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mergesort.rs","byte_start":290634,"byte_end":290640,"line_start":101,"line_end":101,"column_start":22,"column_end":28},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":3040},"to":{"krate":2,"index":1725}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mergesort.rs","byte_start":290889,"byte_end":290902,"line_start":113,"line_end":113,"column_start":22,"column_end":35},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":3046},"to":{"krate":2,"index":1725}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mergesort.rs","byte_start":294678,"byte_end":294687,"line_start":216,"line_end":216,"column_start":22,"column_end":31},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":3056},"to":{"krate":2,"index":1725}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mergesort.rs","byte_start":306116,"byte_end":306121,"line_start":514,"line_end":514,"column_start":22,"column_end":27},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":3078},"to":{"krate":2,"index":1725}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\quicksort.rs","byte_start":315349,"byte_end":315360,"line_start":22,"line_end":22,"column_start":18,"column_end":29},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":3104},"to":{"krate":2,"index":1725}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\quicksort.rs","byte_start":315590,"byte_end":315596,"line_start":35,"line_end":35,"column_start":18,"column_end":24},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":3111},"to":{"krate":2,"index":1725}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\quicksort.rs","byte_start":315803,"byte_end":315813,"line_start":47,"line_end":47,"column_start":18,"column_end":28},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":3117},"to":{"krate":2,"index":1725}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":274576,"byte_end":274580,"line_start":385,"line_end":385,"column_start":32,"column_end":36},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4701},"to":{"krate":2,"index":2179}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":274707,"byte_end":274711,"line_start":391,"line_end":391,"column_start":51,"column_end":55},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4701},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":275036,"byte_end":275040,"line_start":405,"line_end":405,"column_start":58,"column_end":62},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4701},"to":{"krate":0,"index":2825}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":275545,"byte_end":275557,"line_start":427,"line_end":427,"column_start":43,"column_end":55},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":3271},"to":{"krate":0,"index":804}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":276130,"byte_end":276136,"line_start":449,"line_end":449,"column_start":32,"column_end":38},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":2179}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":276265,"byte_end":276271,"line_start":455,"line_end":455,"column_start":51,"column_end":57},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":4709},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":276598,"byte_end":276604,"line_start":469,"line_end":469,"column_start":58,"column_end":64},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":4709},"to":{"krate":0,"index":2825}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":277296,"byte_end":277310,"line_start":495,"line_end":495,"column_start":43,"column_end":57},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":3301},"to":{"krate":0,"index":804}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":278096,"byte_end":278103,"line_start":525,"line_end":525,"column_start":32,"column_end":39},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":4718},"to":{"krate":2,"index":2179}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":278233,"byte_end":278240,"line_start":531,"line_end":531,"column_start":51,"column_end":58},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4718},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":278567,"byte_end":278574,"line_start":545,"line_end":545,"column_start":58,"column_end":65},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":4718},"to":{"krate":0,"index":2825}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":279304,"byte_end":279319,"line_start":572,"line_end":572,"column_start":43,"column_end":58},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":3332},"to":{"krate":0,"index":804}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":280159,"byte_end":280166,"line_start":602,"line_end":602,"column_start":51,"column_end":58},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":4727},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":280495,"byte_end":280502,"line_start":616,"line_end":616,"column_start":58,"column_end":65},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":4727},"to":{"krate":0,"index":2825}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":281017,"byte_end":281032,"line_start":638,"line_end":638,"column_start":43,"column_end":58},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":3359},"to":{"krate":0,"index":804}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":281646,"byte_end":281655,"line_start":660,"line_end":660,"column_start":51,"column_end":60},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":4735},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":281986,"byte_end":281995,"line_start":674,"line_end":674,"column_start":58,"column_end":67},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":4735},"to":{"krate":0,"index":2825}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":282697,"byte_end":282714,"line_start":700,"line_end":700,"column_start":43,"column_end":60},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":3385},"to":{"krate":0,"index":804}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":283487,"byte_end":283492,"line_start":729,"line_end":729,"column_start":36,"column_end":41},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":3397},"to":{"krate":2,"index":2179}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":283643,"byte_end":283648,"line_start":735,"line_end":735,"column_start":36,"column_end":41},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":3397},"to":{"krate":2,"index":7486}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":283866,"byte_end":283871,"line_start":743,"line_end":743,"column_start":40,"column_end":45},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":3397},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":285366,"byte_end":285374,"line_start":801,"line_end":801,"column_start":36,"column_end":44},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":3431},"to":{"krate":2,"index":7486}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\slice\\mod.rs","byte_start":285595,"byte_end":285603,"line_start":809,"line_end":809,"column_start":40,"column_end":48},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":3431},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":351178,"byte_end":351183,"line_start":116,"line_end":116,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":3481}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":351186,"byte_end":351190,"line_start":116,"line_end":116,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":1544},"to":{"krate":0,"index":3481}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":351193,"byte_end":351197,"line_start":116,"line_end":116,"column_start":39,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":1534},"to":{"krate":0,"index":3481}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":352204,"byte_end":352206,"line_start":156,"line_end":156,"column_start":54,"column_end":56},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":3497},"to":{"krate":0,"index":3481}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":353052,"byte_end":353057,"line_start":195,"line_end":195,"column_start":32,"column_end":37},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":4747},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":353312,"byte_end":353325,"line_start":205,"line_end":205,"column_start":33,"column_end":46},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":3504},"to":{"krate":0,"index":836}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":354092,"byte_end":354097,"line_start":236,"line_end":236,"column_start":23,"column_end":28},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4756},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":354298,"byte_end":354303,"line_start":245,"line_end":245,"column_start":44,"column_end":49},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4756},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":355952,"byte_end":355967,"line_start":304,"line_end":304,"column_start":23,"column_end":38},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4769},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":356173,"byte_end":356196,"line_start":313,"line_end":313,"column_start":36,"column_end":59},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":3538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":356504,"byte_end":356519,"line_start":322,"line_end":322,"column_start":44,"column_end":59},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":4769},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":356862,"byte_end":356885,"line_start":333,"line_end":333,"column_start":58,"column_end":81},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":3538},"to":{"krate":0,"index":836}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":357705,"byte_end":357710,"line_start":364,"line_end":364,"column_start":32,"column_end":37},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":4782},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\str.rs","byte_start":358366,"byte_end":358381,"line_start":388,"line_end":388,"column_start":32,"column_end":47},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":4792},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\vec.rs","byte_start":359078,"byte_end":359081,"line_start":15,"line_end":15,"column_start":40,"column_end":43},"kind":{"Impl":{"id":344}},"from":{"krate":5,"index":3763},"to":{"krate":0,"index":2684}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\vec.rs","byte_start":359254,"byte_end":359262,"line_start":24,"line_end":24,"column_start":36,"column_end":44},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":4802},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\vec.rs","byte_start":359558,"byte_end":359566,"line_start":38,"line_end":38,"column_start":43,"column_end":51},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":4802},"to":{"krate":0,"index":2825}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\vec.rs","byte_start":360690,"byte_end":360701,"line_start":74,"line_end":74,"column_start":43,"column_end":54},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":3602},"to":{"krate":0,"index":804}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\vec.rs","byte_start":361344,"byte_end":361355,"line_start":92,"line_end":92,"column_start":39,"column_end":50},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":3602},"to":{"krate":2,"index":1725}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\vec.rs","byte_start":361703,"byte_end":361713,"line_start":105,"line_end":105,"column_start":36,"column_end":46},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":3617},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\vec.rs","byte_start":362020,"byte_end":362030,"line_start":118,"line_end":118,"column_start":47,"column_end":57},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":3617},"to":{"krate":2,"index":3767}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\vec.rs","byte_start":362220,"byte_end":362230,"line_start":124,"line_end":124,"column_start":45,"column_end":55},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":3617},"to":{"krate":2,"index":3796}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\vec.rs","byte_start":362336,"byte_end":362346,"line_start":130,"line_end":130,"column_start":32,"column_end":42},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":3617},"to":{"krate":2,"index":1725}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\par_either.rs","byte_start":362708,"byte_end":362714,"line_start":6,"line_end":6,"column_start":33,"column_end":39},"kind":{"Impl":{"id":353}},"from":{"krate":25,"index":170},"to":{"krate":0,"index":2710}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\par_either.rs","byte_start":363238,"byte_end":363244,"line_start":26,"line_end":26,"column_start":40,"column_end":46},"kind":{"Impl":{"id":354}},"from":{"krate":25,"index":170},"to":{"krate":0,"index":2825}},{"span":{"file_name":"C:\\Rust\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-0.9.0\\src\\par_either.rs","byte_start":364038,"byte_end":364044,"line_start":55,"line_end":55,"column_start":37,"column_end":43},"kind":{"Impl":{"id":355}},"from":{"krate":25,"index":170},"to":{"krate":0,"index":2888}}]}